<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct name='CFAllocatorContext' type64='{_CFAllocatorContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;allocate&quot;^?&quot;reallocate&quot;^?&quot;deallocate&quot;^?&quot;preferredSize&quot;^?}' type='{_CFAllocatorContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;allocate&quot;^?&quot;reallocate&quot;^?&quot;deallocate&quot;^?&quot;preferredSize&quot;^?}'/>
<struct name='CFArrayCallBacks' type64='{_CFArrayCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?}' type='{_CFArrayCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?}'/>
<struct name='CFBagCallBacks' type64='{_CFBagCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}' type='{_CFBagCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}'/>
<struct name='CFBinaryHeapCallBacks' type64='{_CFBinaryHeapCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;compare&quot;^?}' type='{_CFBinaryHeapCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;compare&quot;^?}'/>
<struct name='CFBinaryHeapCompareContext' type64='{_CFBinaryHeapCompareContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFBinaryHeapCompareContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFDictionaryKeyCallBacks' type64='{_CFDictionaryKeyCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}' type='{_CFDictionaryKeyCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}'/>
<struct name='CFDictionaryValueCallBacks' type64='{_CFDictionaryValueCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?}' type='{_CFDictionaryValueCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?}'/>
<struct name='CFFileDescriptorContext' type64='{_CFFileDescriptorContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFFileDescriptorContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFGregorianDate' type='{_CFGregorianDate=&quot;year&quot;i&quot;month&quot;c&quot;day&quot;c&quot;hour&quot;c&quot;minute&quot;c&quot;second&quot;d}'/>
<struct name='CFGregorianUnits' type='{_CFGregorianUnits=&quot;years&quot;i&quot;months&quot;i&quot;days&quot;i&quot;hours&quot;i&quot;minutes&quot;i&quot;seconds&quot;d}'/>
<struct name='CFMachPortContext' type64='{_CFMachPortContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFMachPortContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFMessagePortContext' type64='{_CFMessagePortContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFMessagePortContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFRange' type64='{_CFRange=&quot;location&quot;q&quot;length&quot;q}' type='{_CFRange=&quot;location&quot;i&quot;length&quot;i}'/>
<struct name='CFRunLoopObserverContext' type64='{_CFRunLoopObserverContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFRunLoopObserverContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFRunLoopSourceContext' type64='{_CFRunLoopSourceContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?&quot;schedule&quot;^?&quot;cancel&quot;^?&quot;perform&quot;^?}' type='{_CFRunLoopSourceContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?&quot;schedule&quot;^?&quot;cancel&quot;^?&quot;perform&quot;^?}'/>
<struct name='CFRunLoopSourceContext1' type64='{_CFRunLoopSourceContext1=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?&quot;getPort&quot;^?&quot;perform&quot;^?}' type='{_CFRunLoopSourceContext1=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?&quot;getPort&quot;^?&quot;perform&quot;^?}'/>
<struct name='CFRunLoopTimerContext' type64='{_CFRunLoopTimerContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFRunLoopTimerContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFSetCallBacks' type64='{_CFSetCallBacks=&quot;version&quot;q&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}' type='{_CFSetCallBacks=&quot;version&quot;i&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;equal&quot;^?&quot;hash&quot;^?}'/>
<struct name='CFSocketContext' type64='{_CFSocketContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFSocketContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFSocketSignature' type='{_CFSocketSignature=&quot;protocolFamily&quot;i&quot;socketType&quot;i&quot;protocol&quot;i&quot;address&quot;^{__CFData}}'/>
<struct name='CFStreamClientContext' type64='{_CFStreamClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFStreamClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFStreamError' type64='{_CFStreamError=&quot;domain&quot;q&quot;error&quot;i}' type='{_CFStreamError=&quot;domain&quot;i&quot;error&quot;i}'/>
<struct name='CFStringInlineBuffer' type64='{_CFStringInlineBuffer=&quot;buffer&quot;[64S]&quot;theString&quot;^{__CFString}&quot;directBuffer&quot;^S&quot;rangeToBuffer&quot;{_CFRange=&quot;location&quot;q&quot;length&quot;q}&quot;bufferedRangeStart&quot;q&quot;bufferedRangeEnd&quot;q}' type='{_CFStringInlineBuffer=&quot;buffer&quot;[64S]&quot;theString&quot;^{__CFString}&quot;directBuffer&quot;^S&quot;rangeToBuffer&quot;{_CFRange=&quot;location&quot;i&quot;length&quot;i}&quot;bufferedRangeStart&quot;i&quot;bufferedRangeEnd&quot;i}'/>
<struct name='CFSwappedFloat32' type='{_CFSwappedFloat32=&quot;v&quot;I}'/>
<struct name='CFSwappedFloat64' type='{_CFSwappedFloat64=&quot;v&quot;Q}'/>
<struct name='CFTreeContext' type64='{_CFTreeContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFTreeContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFUUIDBytes' type='{_CFUUIDBytes=&quot;byte0&quot;C&quot;byte1&quot;C&quot;byte2&quot;C&quot;byte3&quot;C&quot;byte4&quot;C&quot;byte5&quot;C&quot;byte6&quot;C&quot;byte7&quot;C&quot;byte8&quot;C&quot;byte9&quot;C&quot;byte10&quot;C&quot;byte11&quot;C&quot;byte12&quot;C&quot;byte13&quot;C&quot;byte14&quot;C&quot;byte15&quot;C}'/>
<struct name='CFXMLAttributeDeclarationInfo' type='{_CFXMLAttributeDeclarationInfo=&quot;attributeName&quot;^{__CFString}&quot;typeString&quot;^{__CFString}&quot;defaultString&quot;^{__CFString}}'/>
<struct name='CFXMLAttributeListDeclarationInfo' type64='{_CFXMLAttributeListDeclarationInfo=&quot;numberOfAttributes&quot;q&quot;attributes&quot;^{_CFXMLAttributeDeclarationInfo=&quot;attributeName&quot;^{__CFString}&quot;typeString&quot;^{__CFString}&quot;defaultString&quot;^{__CFString}}}' type='{_CFXMLAttributeListDeclarationInfo=&quot;numberOfAttributes&quot;i&quot;attributes&quot;^{_CFXMLAttributeDeclarationInfo=&quot;attributeName&quot;^{__CFString}&quot;typeString&quot;^{__CFString}&quot;defaultString&quot;^{__CFString}}}'/>
<struct name='CFXMLDocumentInfo' type='{_CFXMLDocumentInfo=&quot;sourceURL&quot;^{__CFURL}&quot;encoding&quot;I}'/>
<struct name='CFXMLDocumentTypeInfo' type='{_CFXMLDocumentTypeInfo=&quot;externalID&quot;{_CFXMLExternalID=&quot;systemID&quot;^{__CFURL}&quot;publicID&quot;^{__CFString}}}'/>
<struct name='CFXMLElementInfo' type='{_CFXMLElementInfo=&quot;attributes&quot;^{__CFDictionary}&quot;attributeOrder&quot;^{__CFArray}&quot;isEmpty&quot;B&quot;_reserved&quot;[3c]}'/>
<struct name='CFXMLElementTypeDeclarationInfo' type='{_CFXMLElementTypeDeclarationInfo=&quot;contentDescription&quot;^{__CFString}}'/>
<struct name='CFXMLEntityInfo' type64='{_CFXMLEntityInfo=&quot;entityType&quot;q&quot;replacementText&quot;^{__CFString}&quot;entityID&quot;{_CFXMLExternalID=&quot;systemID&quot;^{__CFURL}&quot;publicID&quot;^{__CFString}}&quot;notationName&quot;^{__CFString}}' type='{_CFXMLEntityInfo=&quot;entityType&quot;i&quot;replacementText&quot;^{__CFString}&quot;entityID&quot;{_CFXMLExternalID=&quot;systemID&quot;^{__CFURL}&quot;publicID&quot;^{__CFString}}&quot;notationName&quot;^{__CFString}}'/>
<struct name='CFXMLEntityReferenceInfo' type64='{_CFXMLEntityReferenceInfo=&quot;entityType&quot;q}' type='{_CFXMLEntityReferenceInfo=&quot;entityType&quot;i}'/>
<struct name='CFXMLExternalID' type='{_CFXMLExternalID=&quot;systemID&quot;^{__CFURL}&quot;publicID&quot;^{__CFString}}'/>
<struct name='CFXMLNotationInfo' type='{_CFXMLNotationInfo=&quot;externalID&quot;{_CFXMLExternalID=&quot;systemID&quot;^{__CFURL}&quot;publicID&quot;^{__CFString}}}'/>
<struct name='CFXMLParserCallBacks' type64='{_CFXMLParserCallBacks=&quot;version&quot;q&quot;createXMLStructure&quot;^?&quot;addChild&quot;^?&quot;endXMLStructure&quot;^?&quot;resolveExternalEntity&quot;^?&quot;handleError&quot;^?}' type='{_CFXMLParserCallBacks=&quot;version&quot;i&quot;createXMLStructure&quot;^?&quot;addChild&quot;^?&quot;endXMLStructure&quot;^?&quot;resolveExternalEntity&quot;^?&quot;handleError&quot;^?}'/>
<struct name='CFXMLParserContext' type64='{_CFXMLParserContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_CFXMLParserContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='CFXMLProcessingInstructionInfo' type='{_CFXMLProcessingInstructionInfo=&quot;dataString&quot;^{__CFString}}'/>
<struct name='IUnknownVTbl' type='{IUnknownVTbl=&quot;_reserved&quot;^v&quot;QueryInterface&quot;^?&quot;AddRef&quot;^?&quot;Release&quot;^?}'/>
<struct name='REFIID' type='{_REFIID=&quot;byte0&quot;C&quot;byte1&quot;C&quot;byte2&quot;C&quot;byte3&quot;C&quot;byte4&quot;C&quot;byte5&quot;C&quot;byte6&quot;C&quot;byte7&quot;C&quot;byte8&quot;C&quot;byte9&quot;C&quot;byte10&quot;C&quot;byte11&quot;C&quot;byte12&quot;C&quot;byte13&quot;C&quot;byte14&quot;C&quot;byte15&quot;C}'/>
<cftype name='CFAllocatorRef' tollfree='__NSCFType' gettypeid_func='CFAllocatorGetTypeID' type='^{__CFAllocator=}'/>
<cftype name='CFArrayRef' tollfree='__NSCFArray' gettypeid_func='CFArrayGetTypeID' type='^{__CFArray=}'/>
<cftype name='CFAttributedStringRef' tollfree='__NSCFAttributedString' gettypeid_func='CFAttributedStringGetTypeID' type='^{__CFAttributedString=}'/>
<cftype name='CFBagRef' tollfree='__NSCFType' gettypeid_func='CFBagGetTypeID' type='^{__CFBag=}'/>
<cftype name='CFBinaryHeapRef' tollfree='__NSCFType' gettypeid_func='CFBinaryHeapGetTypeID' type='^{__CFBinaryHeap=}'/>
<cftype name='CFBitVectorRef' tollfree='__NSCFType' gettypeid_func='CFBitVectorGetTypeID' type='^{__CFBitVector=}'/>
<cftype name='CFBooleanRef' tollfree='__NSCFBoolean' gettypeid_func='CFBooleanGetTypeID' type='^{__CFBoolean=}'/>
<cftype name='CFBundleRef' tollfree='__NSCFType' gettypeid_func='CFBundleGetTypeID' type='^{__CFBundle=}'/>
<cftype name='CFCalendarRef' tollfree='__NSCFCalendar' gettypeid_func='CFCalendarGetTypeID' type='^{__CFCalendar=}'/>
<cftype name='CFCharacterSetRef' tollfree='__NSCFCharacterSet' gettypeid_func='CFCharacterSetGetTypeID' type='^{__CFCharacterSet=}'/>
<cftype name='CFDataRef' tollfree='__NSCFData' gettypeid_func='CFDataGetTypeID' type='^{__CFData=}'/>
<cftype name='CFDateFormatterRef' tollfree='__NSCFType' gettypeid_func='CFDateFormatterGetTypeID' type='^{__CFDateFormatter=}'/>
<cftype name='CFDateRef' tollfree='__NSCFType' gettypeid_func='CFDateGetTypeID' type='^{__CFDate=}'/>
<cftype name='CFDictionaryRef' tollfree='__NSCFDictionary' gettypeid_func='CFDictionaryGetTypeID' type='^{__CFDictionary=}'/>
<cftype name='CFErrorRef' tollfree='__NSCFError' gettypeid_func='CFErrorGetTypeID' type='^{__CFError=}'/>
<cftype name='CFFileDescriptorRef' tollfree='__NSCFType' gettypeid_func='CFFileDescriptorGetTypeID' type='^{__CFFileDescriptor=}'/>
<cftype name='CFFileSecurityRef' tollfree='__NSCFType' gettypeid_func='CFFileSecurityGetTypeID' type='^{__CFFileSecurity=}'/>
<cftype name='CFLocaleRef' tollfree='__NSCFLocale' gettypeid_func='CFLocaleGetTypeID' type='^{__CFLocale=}'/>
<cftype name='CFMachPortRef' tollfree='NSMachPort' gettypeid_func='CFMachPortGetTypeID' type='^{__CFMachPort=}'/>
<cftype name='CFMessagePortRef' tollfree='__NSCFType' gettypeid_func='CFMessagePortGetTypeID' type='^{__CFMessagePort=}'/>
<cftype name='CFMutableArrayRef' tollfree='__NSCFArray' gettypeid_func='CFArrayGetTypeID' type='^{__CFArray=}'/>
<cftype name='CFMutableAttributedStringRef' tollfree='__NSCFAttributedString' gettypeid_func='CFAttributedStringGetTypeID' type='^{__CFAttributedString=}'/>
<cftype name='CFMutableBagRef' tollfree='__NSCFType' gettypeid_func='CFBagGetTypeID' type='^{__CFBag=}'/>
<cftype name='CFMutableBitVectorRef' tollfree='__NSCFType' gettypeid_func='CFBitVectorGetTypeID' type='^{__CFBitVector=}'/>
<cftype name='CFMutableCharacterSetRef' tollfree='__NSCFCharacterSet' gettypeid_func='CFCharacterSetGetTypeID' type='^{__CFCharacterSet=}'/>
<cftype name='CFMutableDataRef' tollfree='__NSCFData' gettypeid_func='CFDataGetTypeID' type='^{__CFData=}'/>
<cftype name='CFMutableDictionaryRef' tollfree='__NSCFDictionary' gettypeid_func='CFDictionaryGetTypeID' type='^{__CFDictionary=}'/>
<cftype name='CFMutableSetRef' tollfree='__NSCFSet' gettypeid_func='CFSetGetTypeID' type='^{__CFSet=}'/>
<cftype name='CFMutableStringRef' tollfree='__NSCFString' gettypeid_func='CFStringGetTypeID' type='^{__CFString=}'/>
<cftype name='CFNotificationCenterRef' tollfree='__NSCFType' gettypeid_func='CFNotificationCenterGetTypeID' type='^{__CFNotificationCenter=}'/>
<cftype name='CFNullRef' tollfree='NSNull' gettypeid_func='CFNullGetTypeID' type='^{__CFNull=}'/>
<cftype name='CFNumberFormatterRef' tollfree='__NSCFType' gettypeid_func='CFNumberFormatterGetTypeID' type='^{__CFNumberFormatter=}'/>
<cftype name='CFNumberRef' tollfree='__NSCFNumber' gettypeid_func='CFNumberGetTypeID' type='^{__CFNumber=}'/>
<cftype name='CFPlugInInstanceRef' tollfree='__NSCFType' gettypeid_func='CFPlugInInstanceGetTypeID' type='^{__CFPlugInInstance=}'/>
<cftype name='CFPlugInRef' tollfree='__NSCFType' gettypeid_func='CFPlugInGetTypeID' type='^{__CFBundle=}'/>
<cftype name='CFReadStreamRef' tollfree='__NSCFInputStream' gettypeid_func='CFReadStreamGetTypeID' type='^{__CFReadStream=}'/>
<cftype name='CFRunLoopObserverRef' tollfree='__NSCFType' gettypeid_func='CFRunLoopObserverGetTypeID' type='^{__CFRunLoopObserver=}'/>
<cftype name='CFRunLoopRef' tollfree='__NSCFType' gettypeid_func='CFRunLoopGetTypeID' type='^{__CFRunLoop=}'/>
<cftype name='CFRunLoopSourceRef' tollfree='__NSCFType' gettypeid_func='CFRunLoopSourceGetTypeID' type='^{__CFRunLoopSource=}'/>
<cftype name='CFRunLoopTimerRef' tollfree='__NSCFTimer' gettypeid_func='CFRunLoopTimerGetTypeID' type='^{__CFRunLoopTimer=}'/>
<cftype name='CFSetRef' tollfree='__NSCFSet' gettypeid_func='CFSetGetTypeID' type='^{__CFSet=}'/>
<cftype name='CFSocketRef' tollfree='__NSCFType' gettypeid_func='CFSocketGetTypeID' type='^{__CFSocket=}'/>
<cftype name='CFStringRef' tollfree='__NSCFString' gettypeid_func='CFStringGetTypeID' type='^{__CFString=}'/>
<cftype name='CFStringTokenizerRef' tollfree='__NSCFType' gettypeid_func='CFStringTokenizerGetTypeID' type='^{__CFStringTokenizer=}'/>
<cftype name='CFTimeZoneRef' tollfree='__NSCFType' gettypeid_func='CFTimeZoneGetTypeID' type='^{__CFTimeZone=}'/>
<cftype name='CFTreeRef' tollfree='__NSCFType' gettypeid_func='CFTreeGetTypeID' type='^{__CFTree=}'/>
<cftype name='CFTypeRef' type='^v'/>
<cftype name='CFURLEnumeratorRef' tollfree='__NSCFType' gettypeid_func='CFURLEnumeratorGetTypeID' type='^{__CFURLEnumerator=}'/>
<cftype name='CFURLRef' tollfree='NSURL' gettypeid_func='CFURLGetTypeID' type='^{__CFURL=}'/>
<cftype name='CFUUIDRef' tollfree='__NSCFType' gettypeid_func='CFUUIDGetTypeID' type='^{__CFUUID=}'/>
<cftype name='CFUserNotificationRef' tollfree='__NSCFType' gettypeid_func='CFUserNotificationGetTypeID' type='^{__CFUserNotification=}'/>
<cftype name='CFWriteStreamRef' tollfree='__NSCFOutputStream' gettypeid_func='CFWriteStreamGetTypeID' type='^{__CFWriteStream=}'/>
<cftype name='CFXMLNodeRef' tollfree='__NSCFType' gettypeid_func='CFXMLNodeGetTypeID' type='^{__CFXMLNode=}'/>
<cftype name='CFXMLParserRef' tollfree='__NSCFType' gettypeid_func='CFXMLParserGetTypeID' type='^{__CFXMLParser=}'/>
<constant name='kCFAbsoluteTimeIntervalSince1904' type='d'/>
<constant name='kCFAbsoluteTimeIntervalSince1970' type='d'/>
<constant name='kCFAllocatorDefault' type='^{__CFAllocator=}'/>
<constant name='kCFAllocatorMalloc' type='^{__CFAllocator=}'/>
<constant name='kCFAllocatorMallocZone' type='^{__CFAllocator=}'/>
<constant name='kCFAllocatorNull' type='^{__CFAllocator=}'/>
<constant name='kCFAllocatorSystemDefault' type='^{__CFAllocator=}'/>
<constant magic_cookie='true' name='kCFAllocatorUseContext' type='^{__CFAllocator=}'/>
<constant name='kCFBooleanFalse' type='^{__CFBoolean=}'/>
<constant name='kCFBooleanTrue' type='^{__CFBoolean=}'/>
<constant name='kCFBuddhistCalendar' type='^{__CFString=}'/>
<constant name='kCFBundleDevelopmentRegionKey' type='^{__CFString=}'/>
<constant name='kCFBundleExecutableKey' type='^{__CFString=}'/>
<constant name='kCFBundleIdentifierKey' type='^{__CFString=}'/>
<constant name='kCFBundleInfoDictionaryVersionKey' type='^{__CFString=}'/>
<constant name='kCFBundleLocalizationsKey' type='^{__CFString=}'/>
<constant name='kCFBundleNameKey' type='^{__CFString=}'/>
<constant name='kCFBundleVersionKey' type='^{__CFString=}'/>
<constant name='kCFChineseCalendar' type='^{__CFString=}'/>
<constant name='kCFCopyStringBagCallBacks' type64='{_CFBagCallBacks=q^?^?^?^?^?}' type='{_CFBagCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFCopyStringDictionaryKeyCallBacks' type64='{_CFDictionaryKeyCallBacks=q^?^?^?^?^?}' type='{_CFDictionaryKeyCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFCopyStringSetCallBacks' type64='{_CFSetCallBacks=q^?^?^?^?^?}' type='{_CFSetCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFCoreFoundationVersionNumber' type='d'/>
<constant name='kCFDateFormatterAMSymbol' type='^{__CFString=}'/>
<constant name='kCFDateFormatterCalendar' type='^{__CFString=}'/>
<constant name='kCFDateFormatterCalendarName' type='^{__CFString=}'/>
<constant name='kCFDateFormatterDefaultDate' type='^{__CFString=}'/>
<constant name='kCFDateFormatterDefaultFormat' type='^{__CFString=}'/>
<constant name='kCFDateFormatterDoesRelativeDateFormattingKey' type='^{__CFString=}'/>
<constant name='kCFDateFormatterEraSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterGregorianStartDate' type='^{__CFString=}'/>
<constant name='kCFDateFormatterIsLenient' type='^{__CFString=}'/>
<constant name='kCFDateFormatterLongEraSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterPMSymbol' type='^{__CFString=}'/>
<constant name='kCFDateFormatterQuarterSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortQuarterSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortStandaloneMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortStandaloneQuarterSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortStandaloneWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterShortWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterStandaloneMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterStandaloneQuarterSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterStandaloneWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterTimeZone' type='^{__CFString=}'/>
<constant name='kCFDateFormatterTwoDigitStartDate' type='^{__CFString=}'/>
<constant name='kCFDateFormatterVeryShortMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterVeryShortStandaloneMonthSymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterVeryShortStandaloneWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterVeryShortWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFDateFormatterWeekdaySymbols' type='^{__CFString=}'/>
<constant name='kCFErrorDescriptionKey' type='^{__CFString=}'/>
<constant name='kCFErrorDomainCocoa' type='^{__CFString=}'/>
<constant name='kCFErrorDomainMach' type='^{__CFString=}'/>
<constant name='kCFErrorDomainOSStatus' type='^{__CFString=}'/>
<constant name='kCFErrorDomainPOSIX' type='^{__CFString=}'/>
<constant name='kCFErrorFilePathKey' type='^{__CFString=}'/>
<constant name='kCFErrorLocalizedDescriptionKey' type='^{__CFString=}'/>
<constant name='kCFErrorLocalizedFailureReasonKey' type='^{__CFString=}'/>
<constant name='kCFErrorLocalizedRecoverySuggestionKey' type='^{__CFString=}'/>
<constant name='kCFErrorURLKey' type='^{__CFString=}'/>
<constant name='kCFErrorUnderlyingErrorKey' type='^{__CFString=}'/>
<constant name='kCFGregorianCalendar' type='^{__CFString=}'/>
<constant name='kCFHebrewCalendar' type='^{__CFString=}'/>
<constant name='kCFISO8601Calendar' type='^{__CFString=}'/>
<constant name='kCFIndianCalendar' type='^{__CFString=}'/>
<constant name='kCFIslamicCalendar' type='^{__CFString=}'/>
<constant name='kCFIslamicCivilCalendar' type='^{__CFString=}'/>
<constant name='kCFJapaneseCalendar' type='^{__CFString=}'/>
<constant name='kCFLocaleAlternateQuotationBeginDelimiterKey' type='^{__CFString=}'/>
<constant name='kCFLocaleAlternateQuotationEndDelimiterKey' type='^{__CFString=}'/>
<constant name='kCFLocaleCalendar' type='^{__CFString=}'/>
<constant name='kCFLocaleCalendarIdentifier' type='^{__CFString=}'/>
<constant name='kCFLocaleCollationIdentifier' type='^{__CFString=}'/>
<constant name='kCFLocaleCollatorIdentifier' type='^{__CFString=}'/>
<constant name='kCFLocaleCountryCode' type='^{__CFString=}'/>
<constant name='kCFLocaleCurrencyCode' type='^{__CFString=}'/>
<constant name='kCFLocaleCurrencySymbol' type='^{__CFString=}'/>
<constant name='kCFLocaleCurrentLocaleDidChangeNotification' type='^{__CFString=}'/>
<constant name='kCFLocaleDecimalSeparator' type='^{__CFString=}'/>
<constant name='kCFLocaleExemplarCharacterSet' type='^{__CFString=}'/>
<constant name='kCFLocaleGroupingSeparator' type='^{__CFString=}'/>
<constant name='kCFLocaleIdentifier' type='^{__CFString=}'/>
<constant name='kCFLocaleLanguageCode' type='^{__CFString=}'/>
<constant name='kCFLocaleMeasurementSystem' type='^{__CFString=}'/>
<constant name='kCFLocaleQuotationBeginDelimiterKey' type='^{__CFString=}'/>
<constant name='kCFLocaleQuotationEndDelimiterKey' type='^{__CFString=}'/>
<constant name='kCFLocaleScriptCode' type='^{__CFString=}'/>
<constant name='kCFLocaleUsesMetricSystem' type='^{__CFString=}'/>
<constant name='kCFLocaleVariantCode' type='^{__CFString=}'/>
<constant name='kCFNull' type='^{__CFNull=}'/>
<constant name='kCFNumberFormatterAlwaysShowDecimalSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterCurrencyCode' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterCurrencyDecimalSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterCurrencyGroupingSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterCurrencySymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterDecimalSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterDefaultFormat' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterExponentSymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterFormatWidth' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterGroupingSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterGroupingSize' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterInfinitySymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterInternationalCurrencySymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterIsLenient' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMaxFractionDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMaxIntegerDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMaxSignificantDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMinFractionDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMinIntegerDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMinSignificantDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMinusSign' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterMultiplier' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterNaNSymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterNegativePrefix' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterNegativeSuffix' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPaddingCharacter' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPaddingPosition' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPerMillSymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPercentSymbol' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPlusSign' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPositivePrefix' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterPositiveSuffix' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterRoundingIncrement' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterRoundingMode' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterSecondaryGroupingSize' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterUseGroupingSeparator' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterUseSignificantDigits' type='^{__CFString=}'/>
<constant name='kCFNumberFormatterZeroSymbol' type='^{__CFString=}'/>
<constant name='kCFNumberNaN' type='^{__CFNumber=}'/>
<constant name='kCFNumberNegativeInfinity' type='^{__CFNumber=}'/>
<constant name='kCFNumberPositiveInfinity' type='^{__CFNumber=}'/>
<constant name='kCFPersianCalendar' type='^{__CFString=}'/>
<constant name='kCFPlugInDynamicRegisterFunctionKey' type='^{__CFString=}'/>
<constant name='kCFPlugInDynamicRegistrationKey' type='^{__CFString=}'/>
<constant name='kCFPlugInFactoriesKey' type='^{__CFString=}'/>
<constant name='kCFPlugInTypesKey' type='^{__CFString=}'/>
<constant name='kCFPlugInUnloadFunctionKey' type='^{__CFString=}'/>
<constant name='kCFPreferencesAnyApplication' type='^{__CFString=}'/>
<constant name='kCFPreferencesAnyHost' type='^{__CFString=}'/>
<constant name='kCFPreferencesAnyUser' type='^{__CFString=}'/>
<constant name='kCFPreferencesCurrentApplication' type='^{__CFString=}'/>
<constant name='kCFPreferencesCurrentHost' type='^{__CFString=}'/>
<constant name='kCFPreferencesCurrentUser' type='^{__CFString=}'/>
<constant name='kCFRepublicOfChinaCalendar' type='^{__CFString=}'/>
<constant name='kCFRunLoopCommonModes' type='^{__CFString=}'/>
<constant name='kCFRunLoopDefaultMode' type='^{__CFString=}'/>
<constant name='kCFSocketCommandKey' type='^{__CFString=}'/>
<constant name='kCFSocketErrorKey' type='^{__CFString=}'/>
<constant name='kCFSocketNameKey' type='^{__CFString=}'/>
<constant name='kCFSocketRegisterCommand' type='^{__CFString=}'/>
<constant name='kCFSocketResultKey' type='^{__CFString=}'/>
<constant name='kCFSocketRetrieveCommand' type='^{__CFString=}'/>
<constant name='kCFSocketValueKey' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyAppendToFile' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyDataWritten' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFileCurrentOffset' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketNativeHandle' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketRemoteHostName' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketRemotePortNumber' type='^{__CFString=}'/>
<constant name='kCFStringBinaryHeapCallBacks' type64='{_CFBinaryHeapCallBacks=q^?^?^?^?}' type='{_CFBinaryHeapCallBacks=i^?^?^?^?}'/>
<constant name='kCFStringTransformFullwidthHalfwidth' type='^{__CFString=}'/>
<constant name='kCFStringTransformHiraganaKatakana' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinArabic' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinCyrillic' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinGreek' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinHangul' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinHebrew' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinHiragana' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinKatakana' type='^{__CFString=}'/>
<constant name='kCFStringTransformLatinThai' type='^{__CFString=}'/>
<constant name='kCFStringTransformMandarinLatin' type='^{__CFString=}'/>
<constant name='kCFStringTransformStripCombiningMarks' type='^{__CFString=}'/>
<constant name='kCFStringTransformStripDiacritics' type='^{__CFString=}'/>
<constant name='kCFStringTransformToLatin' type='^{__CFString=}'/>
<constant name='kCFStringTransformToUnicodeName' type='^{__CFString=}'/>
<constant name='kCFStringTransformToXMLHex' type='^{__CFString=}'/>
<constant name='kCFTimeZoneSystemTimeZoneDidChangeNotification' type='^{__CFString=}'/>
<constant name='kCFTypeArrayCallBacks' type64='{_CFArrayCallBacks=q^?^?^?^?}' type='{_CFArrayCallBacks=i^?^?^?^?}'/>
<constant name='kCFTypeBagCallBacks' type64='{_CFBagCallBacks=q^?^?^?^?^?}' type='{_CFBagCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFTypeDictionaryKeyCallBacks' type64='{_CFDictionaryKeyCallBacks=q^?^?^?^?^?}' type='{_CFDictionaryKeyCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFTypeDictionaryValueCallBacks' type64='{_CFDictionaryValueCallBacks=q^?^?^?^?}' type='{_CFDictionaryValueCallBacks=i^?^?^?^?}'/>
<constant name='kCFTypeSetCallBacks' type64='{_CFSetCallBacks=q^?^?^?^?^?}' type='{_CFSetCallBacks=i^?^?^?^?^?}'/>
<constant name='kCFURLAttributeModificationDateKey' type='^{__CFString=}'/>
<constant name='kCFURLContentAccessDateKey' type='^{__CFString=}'/>
<constant name='kCFURLContentModificationDateKey' type='^{__CFString=}'/>
<constant name='kCFURLCreationDateKey' type='^{__CFString=}'/>
<constant name='kCFURLCustomIconKey' type='^{__CFString=}'/>
<constant name='kCFURLEffectiveIconKey' type='^{__CFString=}'/>
<constant name='kCFURLFileAllocatedSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLFileDirectoryContents' type='^{__CFString=}'/>
<constant name='kCFURLFileExists' type='^{__CFString=}'/>
<constant name='kCFURLFileLastModificationTime' type='^{__CFString=}'/>
<constant name='kCFURLFileLength' type='^{__CFString=}'/>
<constant name='kCFURLFileOwnerID' type='^{__CFString=}'/>
<constant name='kCFURLFilePOSIXMode' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceIdentifierKey' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeBlockSpecial' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeCharacterSpecial' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeDirectory' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeKey' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeNamedPipe' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeRegular' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeSocket' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeSymbolicLink' type='^{__CFString=}'/>
<constant name='kCFURLFileResourceTypeUnknown' type='^{__CFString=}'/>
<constant name='kCFURLFileSecurityKey' type='^{__CFString=}'/>
<constant name='kCFURLFileSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLHTTPStatusCode' type='^{__CFString=}'/>
<constant name='kCFURLHTTPStatusLine' type='^{__CFString=}'/>
<constant name='kCFURLHasHiddenExtensionKey' type='^{__CFString=}'/>
<constant name='kCFURLIsAliasFileKey' type='^{__CFString=}'/>
<constant name='kCFURLIsDirectoryKey' type='^{__CFString=}'/>
<constant name='kCFURLIsExcludedFromBackupKey' type='^{__CFString=}'/>
<constant name='kCFURLIsExecutableKey' type='^{__CFString=}'/>
<constant name='kCFURLIsHiddenKey' type='^{__CFString=}'/>
<constant name='kCFURLIsMountTriggerKey' type='^{__CFString=}'/>
<constant name='kCFURLIsPackageKey' type='^{__CFString=}'/>
<constant name='kCFURLIsReadableKey' type='^{__CFString=}'/>
<constant name='kCFURLIsRegularFileKey' type='^{__CFString=}'/>
<constant name='kCFURLIsSymbolicLinkKey' type='^{__CFString=}'/>
<constant name='kCFURLIsSystemImmutableKey' type='^{__CFString=}'/>
<constant name='kCFURLIsUbiquitousItemKey' type='^{__CFString=}'/>
<constant name='kCFURLIsUserImmutableKey' type='^{__CFString=}'/>
<constant name='kCFURLIsVolumeKey' type='^{__CFString=}'/>
<constant name='kCFURLIsWritableKey' type='^{__CFString=}'/>
<constant name='kCFURLKeysOfUnsetValuesKey' type='^{__CFString=}'/>
<constant name='kCFURLLabelColorKey' type='^{__CFString=}'/>
<constant name='kCFURLLabelNumberKey' type='^{__CFString=}'/>
<constant name='kCFURLLinkCountKey' type='^{__CFString=}'/>
<constant name='kCFURLLocalizedLabelKey' type='^{__CFString=}'/>
<constant name='kCFURLLocalizedNameKey' type='^{__CFString=}'/>
<constant name='kCFURLLocalizedTypeDescriptionKey' type='^{__CFString=}'/>
<constant name='kCFURLNameKey' type='^{__CFString=}'/>
<constant name='kCFURLParentDirectoryURLKey' type='^{__CFString=}'/>
<constant name='kCFURLPathKey' type='^{__CFString=}'/>
<constant name='kCFURLPreferredIOBlockSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLTotalFileAllocatedSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLTotalFileSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLTypeIdentifierKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemHasUnresolvedConflictsKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemIsDownloadedKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemIsDownloadingKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemIsUploadedKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemIsUploadingKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemPercentDownloadedKey' type='^{__CFString=}'/>
<constant name='kCFURLUbiquitousItemPercentUploadedKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeAvailableCapacityKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeCreationDateKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIdentifierKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsAutomountedKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsBrowsableKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsEjectableKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsInternalKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsJournalingKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsLocalKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsReadOnlyKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeIsRemovableKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeLocalizedFormatDescriptionKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeLocalizedNameKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeMaximumFileSizeKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeNameKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeResourceCountKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsAdvisoryFileLockingKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsCasePreservedNamesKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsCaseSensitiveNamesKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsExtendedSecurityKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsHardLinksKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsJournalingKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsPersistentIDsKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsRenamingKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsRootDirectoryDatesKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsSparseFilesKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsSymbolicLinksKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsVolumeSizesKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeSupportsZeroRunsKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeTotalCapacityKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeURLForRemountingKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeURLKey' type='^{__CFString=}'/>
<constant name='kCFURLVolumeUUIDStringKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationAlertHeaderKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationAlertMessageKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationAlternateButtonTitleKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationCheckBoxTitlesKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationDefaultButtonTitleKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationIconURLKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationLocalizationURLKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationOtherButtonTitleKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationPopUpSelectionKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationPopUpTitlesKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationProgressIndicatorValueKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationSoundURLKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationTextFieldTitlesKey' type='^{__CFString=}'/>
<constant name='kCFUserNotificationTextFieldValuesKey' type='^{__CFString=}'/>
<constant name='kCFXMLTreeErrorDescription' type='^{__CFString=}'/>
<constant name='kCFXMLTreeErrorLineNumber' type='^{__CFString=}'/>
<constant name='kCFXMLTreeErrorLocation' type='^{__CFString=}'/>
<constant name='kCFXMLTreeErrorStatusCode' type='^{__CFString=}'/>
<enum value='2' name='CFByteOrderBigEndian'/>
<enum value='1' name='CFByteOrderLittleEndian'/>
<enum value='0' name='CFByteOrderUnknown'/>
<enum value='2' name='CFNotificationSuspensionBehaviorCoalesce'/>
<enum value='4' name='CFNotificationSuspensionBehaviorDeliverImmediately'/>
<enum value='1' name='CFNotificationSuspensionBehaviorDrop'/>
<enum value='3' name='CFNotificationSuspensionBehaviorHold'/>
<enum value='1' name='CF_USE_OSBYTEORDER_H'/>
<enum value='1' name='COREFOUNDATION_CFPLUGINCOM_SEPARATE'/>
<enum value='-2147483641' name='E_ABORT'/>
<enum value='-2147483639' name='E_ACCESSDENIED'/>
<enum value='-2147483640' name='E_FAIL'/>
<enum value='-2147483642' name='E_HANDLE'/>
<enum value='-2147483645' name='E_INVALIDARG'/>
<enum value='-2147483644' name='E_NOINTERFACE'/>
<enum value='-2147483647' name='E_NOTIMPL'/>
<enum value='-2147483646' name='E_OUTOFMEMORY'/>
<enum value='-2147483643' name='E_POINTER'/>
<enum value='-2147418113' name='E_UNEXPECTED'/>
<enum value='0' name='FALSE'/>
<enum value='1' name='SEVERITY_ERROR'/>
<enum value='0' name='SEVERITY_SUCCESS'/>
<enum value='1' name='S_FALSE'/>
<enum value='0' name='S_OK'/>
<enum value='1' name='TRUE'/>
<enum value='512' name='kCFBookmarkResolutionWithoutMountingMask'/>
<enum value='256' name='kCFBookmarkResolutionWithoutUIMask'/>
<enum value='7' name='kCFBundleExecutableArchitectureI386'/>
<enum value='18' name='kCFBundleExecutableArchitecturePPC'/>
<enum value='16777234' name='kCFBundleExecutableArchitecturePPC64'/>
<enum value='16777223' name='kCFBundleExecutableArchitectureX86_64'/>
<enum value='1' name='kCFCalendarComponentsWrap'/>
<enum value='16' name='kCFCalendarUnitDay'/>
<enum value='2' name='kCFCalendarUnitEra'/>
<enum value='32' name='kCFCalendarUnitHour'/>
<enum value='64' name='kCFCalendarUnitMinute'/>
<enum value='8' name='kCFCalendarUnitMonth'/>
<enum value='2048' name='kCFCalendarUnitQuarter'/>
<enum value='128' name='kCFCalendarUnitSecond'/>
<enum value='256' name='kCFCalendarUnitWeek'/>
<enum value='4096' name='kCFCalendarUnitWeekOfMonth'/>
<enum value='8192' name='kCFCalendarUnitWeekOfYear'/>
<enum value='512' name='kCFCalendarUnitWeekday'/>
<enum value='1024' name='kCFCalendarUnitWeekdayOrdinal'/>
<enum value='4' name='kCFCalendarUnitYear'/>
<enum value='16384' name='kCFCalendarUnitYearForWeekOfYear'/>
<enum value='10' name='kCFCharacterSetAlphaNumeric'/>
<enum value='13' name='kCFCharacterSetCapitalizedLetter'/>
<enum value='1' name='kCFCharacterSetControl'/>
<enum value='4' name='kCFCharacterSetDecimalDigit'/>
<enum value='9' name='kCFCharacterSetDecomposable'/>
<enum value='12' name='kCFCharacterSetIllegal'/>
<enum value='5' name='kCFCharacterSetLetter'/>
<enum value='6' name='kCFCharacterSetLowercaseLetter'/>
<enum value='15' name='kCFCharacterSetNewline'/>
<enum value='8' name='kCFCharacterSetNonBase'/>
<enum value='11' name='kCFCharacterSetPunctuation'/>
<enum value='14' name='kCFCharacterSetSymbol'/>
<enum value='7' name='kCFCharacterSetUppercaseLetter'/>
<enum value='2' name='kCFCharacterSetWhitespace'/>
<enum value='3' name='kCFCharacterSetWhitespaceAndNewline'/>
<enum value='8' name='kCFCompareAnchored'/>
<enum value='4' name='kCFCompareBackwards'/>
<enum value='1' name='kCFCompareCaseInsensitive'/>
<enum value='128' name='kCFCompareDiacriticInsensitive'/>
<enum value='0' name='kCFCompareEqualTo'/>
<enum value='512' name='kCFCompareForcedOrdering'/>
<enum value='1' name='kCFCompareGreaterThan'/>
<enum value='-1' name='kCFCompareLessThan'/>
<enum value='32' name='kCFCompareLocalized'/>
<enum value='16' name='kCFCompareNonliteral'/>
<enum value='64' name='kCFCompareNumerically'/>
<enum value='256' name='kCFCompareWidthInsensitive'/>
<enum value='196.40' name='kCFCoreFoundationVersionNumber10_0'/>
<enum value='196.50' name='kCFCoreFoundationVersionNumber10_0_3'/>
<enum value='226.00' name='kCFCoreFoundationVersionNumber10_1'/>
<enum value='226.00' name='kCFCoreFoundationVersionNumber10_1_1'/>
<enum value='227.20' name='kCFCoreFoundationVersionNumber10_1_2'/>
<enum value='227.20' name='kCFCoreFoundationVersionNumber10_1_3'/>
<enum value='227.30' name='kCFCoreFoundationVersionNumber10_1_4'/>
<enum value='263.00' name='kCFCoreFoundationVersionNumber10_2'/>
<enum value='263.10' name='kCFCoreFoundationVersionNumber10_2_1'/>
<enum value='263.10' name='kCFCoreFoundationVersionNumber10_2_2'/>
<enum value='263.30' name='kCFCoreFoundationVersionNumber10_2_3'/>
<enum value='263.30' name='kCFCoreFoundationVersionNumber10_2_4'/>
<enum value='263.50' name='kCFCoreFoundationVersionNumber10_2_5'/>
<enum value='263.50' name='kCFCoreFoundationVersionNumber10_2_6'/>
<enum value='263.50' name='kCFCoreFoundationVersionNumber10_2_7'/>
<enum value='263.50' name='kCFCoreFoundationVersionNumber10_2_8'/>
<enum value='299.00' name='kCFCoreFoundationVersionNumber10_3'/>
<enum value='299.00' name='kCFCoreFoundationVersionNumber10_3_1'/>
<enum value='299.00' name='kCFCoreFoundationVersionNumber10_3_2'/>
<enum value='299.30' name='kCFCoreFoundationVersionNumber10_3_3'/>
<enum value='299.31' name='kCFCoreFoundationVersionNumber10_3_4'/>
<enum value='299.31' name='kCFCoreFoundationVersionNumber10_3_5'/>
<enum value='299.32' name='kCFCoreFoundationVersionNumber10_3_6'/>
<enum value='299.33' name='kCFCoreFoundationVersionNumber10_3_7'/>
<enum value='299.33' name='kCFCoreFoundationVersionNumber10_3_8'/>
<enum value='299.35' name='kCFCoreFoundationVersionNumber10_3_9'/>
<enum value='368.00' name='kCFCoreFoundationVersionNumber10_4'/>
<enum value='368.10' name='kCFCoreFoundationVersionNumber10_4_1'/>
<enum value='368.28' name='kCFCoreFoundationVersionNumber10_4_10'/>
<enum value='368.31' name='kCFCoreFoundationVersionNumber10_4_11'/>
<enum value='368.11' name='kCFCoreFoundationVersionNumber10_4_2'/>
<enum value='368.18' name='kCFCoreFoundationVersionNumber10_4_3'/>
<enum value='368.26' name='kCFCoreFoundationVersionNumber10_4_4_Intel'/>
<enum value='368.25' name='kCFCoreFoundationVersionNumber10_4_4_PowerPC'/>
<enum value='368.26' name='kCFCoreFoundationVersionNumber10_4_5_Intel'/>
<enum value='368.25' name='kCFCoreFoundationVersionNumber10_4_5_PowerPC'/>
<enum value='368.26' name='kCFCoreFoundationVersionNumber10_4_6_Intel'/>
<enum value='368.25' name='kCFCoreFoundationVersionNumber10_4_6_PowerPC'/>
<enum value='368.27' name='kCFCoreFoundationVersionNumber10_4_7'/>
<enum value='368.27' name='kCFCoreFoundationVersionNumber10_4_8'/>
<enum value='368.28' name='kCFCoreFoundationVersionNumber10_4_9'/>
<enum value='476.00' name='kCFCoreFoundationVersionNumber10_5'/>
<enum value='476.00' name='kCFCoreFoundationVersionNumber10_5_1'/>
<enum value='476.10' name='kCFCoreFoundationVersionNumber10_5_2'/>
<enum value='476.13' name='kCFCoreFoundationVersionNumber10_5_3'/>
<enum value='476.14' name='kCFCoreFoundationVersionNumber10_5_4'/>
<enum value='476.15' name='kCFCoreFoundationVersionNumber10_5_5'/>
<enum value='476.17' name='kCFCoreFoundationVersionNumber10_5_6'/>
<enum value='476.18' name='kCFCoreFoundationVersionNumber10_5_7'/>
<enum value='476.19' name='kCFCoreFoundationVersionNumber10_5_8'/>
<enum value='550.00' name='kCFCoreFoundationVersionNumber10_6'/>
<enum value='550.00' name='kCFCoreFoundationVersionNumber10_6_1'/>
<enum value='550.13' name='kCFCoreFoundationVersionNumber10_6_2'/>
<enum value='550.19' name='kCFCoreFoundationVersionNumber10_6_3'/>
<enum value='550.29' name='kCFCoreFoundationVersionNumber10_6_4'/>
<enum value='550.42' name='kCFCoreFoundationVersionNumber10_6_5'/>
<enum value='550.42' name='kCFCoreFoundationVersionNumber10_6_6'/>
<enum value='550.42' name='kCFCoreFoundationVersionNumber10_6_7'/>
<enum value='550.43' name='kCFCoreFoundationVersionNumber10_6_8'/>
<enum value='635.00' name='kCFCoreFoundationVersionNumber10_7'/>
<enum value='635.00' name='kCFCoreFoundationVersionNumber10_7_1'/>
<enum value='635.15' name='kCFCoreFoundationVersionNumber10_7_2'/>
<enum value='635.19' name='kCFCoreFoundationVersionNumber10_7_3'/>
<enum value='635.21' name='kCFCoreFoundationVersionNumber10_7_4'/>
<enum value='2' name='kCFDataSearchAnchored'/>
<enum value='1' name='kCFDataSearchBackwards'/>
<enum value='4' name='kCFDateFormatterFullStyle'/>
<enum value='3' name='kCFDateFormatterLongStyle'/>
<enum value='2' name='kCFDateFormatterMediumStyle'/>
<enum value='0' name='kCFDateFormatterNoStyle'/>
<enum value='1' name='kCFDateFormatterShortStyle'/>
<enum value='1' name='kCFFileDescriptorReadCallBack'/>
<enum value='2' name='kCFFileDescriptorWriteCallBack'/>
<enum value='32' name='kCFFileSecurityClearAccessControlList'/>
<enum value='2' name='kCFFileSecurityClearGroup'/>
<enum value='16' name='kCFFileSecurityClearGroupUUID'/>
<enum value='4' name='kCFFileSecurityClearMode'/>
<enum value='1' name='kCFFileSecurityClearOwner'/>
<enum value='8' name='kCFFileSecurityClearOwnerUUID'/>
<enum value='16777215' name='kCFGregorianAllUnits'/>
<enum value='4' name='kCFGregorianUnitsDays'/>
<enum value='8' name='kCFGregorianUnitsHours'/>
<enum value='16' name='kCFGregorianUnitsMinutes'/>
<enum value='2' name='kCFGregorianUnitsMonths'/>
<enum value='32' name='kCFGregorianUnitsSeconds'/>
<enum value='1' name='kCFGregorianUnitsYears'/>
<enum value='4' name='kCFLocaleLanguageDirectionBottomToTop'/>
<enum value='1' name='kCFLocaleLanguageDirectionLeftToRight'/>
<enum value='2' name='kCFLocaleLanguageDirectionRightToLeft'/>
<enum value='3' name='kCFLocaleLanguageDirectionTopToBottom'/>
<enum value='0' name='kCFLocaleLanguageDirectionUnknown'/>
<enum value='-5' name='kCFMessagePortBecameInvalidError'/>
<enum value='-3' name='kCFMessagePortIsInvalid'/>
<enum value='-2' name='kCFMessagePortReceiveTimeout'/>
<enum value='-1' name='kCFMessagePortSendTimeout'/>
<enum value='0' name='kCFMessagePortSuccess'/>
<enum value='-4' name='kCFMessagePortTransportError'/>
<enum value='-1' name='kCFNotFound'/>
<enum value='1' name='kCFNotificationDeliverImmediately'/>
<enum value='2' name='kCFNotificationPostToAllSessions'/>
<enum value='14' name='kCFNumberCFIndexType'/>
<enum value='16' name='kCFNumberCGFloatType'/>
<enum value='7' name='kCFNumberCharType'/>
<enum value='13' name='kCFNumberDoubleType'/>
<enum value='5' name='kCFNumberFloat32Type'/>
<enum value='6' name='kCFNumberFloat64Type'/>
<enum value='12' name='kCFNumberFloatType'/>
<enum value='2' name='kCFNumberFormatterCurrencyStyle'/>
<enum value='1' name='kCFNumberFormatterDecimalStyle'/>
<enum value='0' name='kCFNumberFormatterNoStyle'/>
<enum value='1' name='kCFNumberFormatterPadAfterPrefix'/>
<enum value='3' name='kCFNumberFormatterPadAfterSuffix'/>
<enum value='0' name='kCFNumberFormatterPadBeforePrefix'/>
<enum value='2' name='kCFNumberFormatterPadBeforeSuffix'/>
<enum value='1' name='kCFNumberFormatterParseIntegersOnly'/>
<enum value='3' name='kCFNumberFormatterPercentStyle'/>
<enum value='0' name='kCFNumberFormatterRoundCeiling'/>
<enum value='2' name='kCFNumberFormatterRoundDown'/>
<enum value='1' name='kCFNumberFormatterRoundFloor'/>
<enum value='5' name='kCFNumberFormatterRoundHalfDown'/>
<enum value='4' name='kCFNumberFormatterRoundHalfEven'/>
<enum value='6' name='kCFNumberFormatterRoundHalfUp'/>
<enum value='3' name='kCFNumberFormatterRoundUp'/>
<enum value='4' name='kCFNumberFormatterScientificStyle'/>
<enum value='5' name='kCFNumberFormatterSpellOutStyle'/>
<enum value='9' name='kCFNumberIntType'/>
<enum value='11' name='kCFNumberLongLongType'/>
<enum value='10' name='kCFNumberLongType'/>
<enum value='16' name='kCFNumberMaxType'/>
<enum value='15' name='kCFNumberNSIntegerType'/>
<enum value='2' name='kCFNumberSInt16Type'/>
<enum value='3' name='kCFNumberSInt32Type'/>
<enum value='4' name='kCFNumberSInt64Type'/>
<enum value='1' name='kCFNumberSInt8Type'/>
<enum value='8' name='kCFNumberShortType'/>
<enum value='200' name='kCFPropertyListBinaryFormat_v1_0'/>
<enum value='0' name='kCFPropertyListImmutable'/>
<enum value='1' name='kCFPropertyListMutableContainers'/>
<enum value='2' name='kCFPropertyListMutableContainersAndLeaves'/>
<enum value='1' name='kCFPropertyListOpenStepFormat'/>
<enum value='3840' name='kCFPropertyListReadCorruptError'/>
<enum value='3842' name='kCFPropertyListReadStreamError'/>
<enum value='3841' name='kCFPropertyListReadUnknownVersionError'/>
<enum value='3851' name='kCFPropertyListWriteStreamError'/>
<enum value='100' name='kCFPropertyListXMLFormat_v1_0'/>
<enum value='64' name='kCFRunLoopAfterWaiting'/>
<enum value='268435455' name='kCFRunLoopAllActivities'/>
<enum value='4' name='kCFRunLoopBeforeSources'/>
<enum value='2' name='kCFRunLoopBeforeTimers'/>
<enum value='32' name='kCFRunLoopBeforeWaiting'/>
<enum value='1' name='kCFRunLoopEntry'/>
<enum value='128' name='kCFRunLoopExit'/>
<enum value='1' name='kCFRunLoopRunFinished'/>
<enum value='4' name='kCFRunLoopRunHandledSource'/>
<enum value='2' name='kCFRunLoopRunStopped'/>
<enum value='3' name='kCFRunLoopRunTimedOut'/>
<enum value='2' name='kCFSocketAcceptCallBack'/>
<enum value='2' name='kCFSocketAutomaticallyReenableAcceptCallBack'/>
<enum value='3' name='kCFSocketAutomaticallyReenableDataCallBack'/>
<enum value='1' name='kCFSocketAutomaticallyReenableReadCallBack'/>
<enum value='8' name='kCFSocketAutomaticallyReenableWriteCallBack'/>
<enum value='128' name='kCFSocketCloseOnInvalidate'/>
<enum value='4' name='kCFSocketConnectCallBack'/>
<enum value='3' name='kCFSocketDataCallBack'/>
<enum value='-1' name='kCFSocketError'/>
<enum value='64' name='kCFSocketLeaveErrors'/>
<enum value='0' name='kCFSocketNoCallBack'/>
<enum value='1' name='kCFSocketReadCallBack'/>
<enum value='0' name='kCFSocketSuccess'/>
<enum value='-2' name='kCFSocketTimeout'/>
<enum value='8' name='kCFSocketWriteCallBack'/>
<enum value='-1' name='kCFStreamErrorDomainCustom'/>
<enum value='2' name='kCFStreamErrorDomainMacOSStatus'/>
<enum value='1' name='kCFStreamErrorDomainPOSIX'/>
<enum value='4' name='kCFStreamEventCanAcceptBytes'/>
<enum value='16' name='kCFStreamEventEndEncountered'/>
<enum value='8' name='kCFStreamEventErrorOccurred'/>
<enum value='2' name='kCFStreamEventHasBytesAvailable'/>
<enum value='0' name='kCFStreamEventNone'/>
<enum value='1' name='kCFStreamEventOpenCompleted'/>
<enum value='5' name='kCFStreamStatusAtEnd'/>
<enum value='6' name='kCFStreamStatusClosed'/>
<enum value='7' name='kCFStreamStatusError'/>
<enum value='0' name='kCFStreamStatusNotOpen'/>
<enum value='2' name='kCFStreamStatusOpen'/>
<enum value='1' name='kCFStreamStatusOpening'/>
<enum value='3' name='kCFStreamStatusReading'/>
<enum value='4' name='kCFStreamStatusWriting'/>
<enum value='1537' name='kCFStringEncodingANSEL'/>
<enum value='1536' name='kCFStringEncodingASCII'/>
<enum value='2563' name='kCFStringEncodingBig5'/>
<enum value='2569' name='kCFStringEncodingBig5_E'/>
<enum value='2566' name='kCFStringEncodingBig5_HKSCS_1999'/>
<enum value='1617' name='kCFStringEncodingCNS_11643_92_P1'/>
<enum value='1618' name='kCFStringEncodingCNS_11643_92_P2'/>
<enum value='1619' name='kCFStringEncodingCNS_11643_92_P3'/>
<enum value='1049' name='kCFStringEncodingDOSArabic'/>
<enum value='1030' name='kCFStringEncodingDOSBalticRim'/>
<enum value='1048' name='kCFStringEncodingDOSCanadianFrench'/>
<enum value='1057' name='kCFStringEncodingDOSChineseSimplif'/>
<enum value='1059' name='kCFStringEncodingDOSChineseTrad'/>
<enum value='1043' name='kCFStringEncodingDOSCyrillic'/>
<enum value='1029' name='kCFStringEncodingDOSGreek'/>
<enum value='1041' name='kCFStringEncodingDOSGreek1'/>
<enum value='1052' name='kCFStringEncodingDOSGreek2'/>
<enum value='1047' name='kCFStringEncodingDOSHebrew'/>
<enum value='1046' name='kCFStringEncodingDOSIcelandic'/>
<enum value='1056' name='kCFStringEncodingDOSJapanese'/>
<enum value='1058' name='kCFStringEncodingDOSKorean'/>
<enum value='1040' name='kCFStringEncodingDOSLatin1'/>
<enum value='1042' name='kCFStringEncodingDOSLatin2'/>
<enum value='1024' name='kCFStringEncodingDOSLatinUS'/>
<enum value='1050' name='kCFStringEncodingDOSNordic'/>
<enum value='1045' name='kCFStringEncodingDOSPortuguese'/>
<enum value='1051' name='kCFStringEncodingDOSRussian'/>
<enum value='1053' name='kCFStringEncodingDOSThai'/>
<enum value='1044' name='kCFStringEncodingDOSTurkish'/>
<enum value='3074' name='kCFStringEncodingEBCDIC_CP037'/>
<enum value='3073' name='kCFStringEncodingEBCDIC_US'/>
<enum value='2352' name='kCFStringEncodingEUC_CN'/>
<enum value='2336' name='kCFStringEncodingEUC_JP'/>
<enum value='2368' name='kCFStringEncodingEUC_KR'/>
<enum value='2353' name='kCFStringEncodingEUC_TW'/>
<enum value='1585' name='kCFStringEncodingGBK_95'/>
<enum value='1586' name='kCFStringEncodingGB_18030_2000'/>
<enum value='1584' name='kCFStringEncodingGB_2312_80'/>
<enum value='2565' name='kCFStringEncodingHZ_GB_2312'/>
<enum value='513' name='kCFStringEncodingISOLatin1'/>
<enum value='528' name='kCFStringEncodingISOLatin10'/>
<enum value='514' name='kCFStringEncodingISOLatin2'/>
<enum value='515' name='kCFStringEncodingISOLatin3'/>
<enum value='516' name='kCFStringEncodingISOLatin4'/>
<enum value='521' name='kCFStringEncodingISOLatin5'/>
<enum value='522' name='kCFStringEncodingISOLatin6'/>
<enum value='525' name='kCFStringEncodingISOLatin7'/>
<enum value='526' name='kCFStringEncodingISOLatin8'/>
<enum value='527' name='kCFStringEncodingISOLatin9'/>
<enum value='518' name='kCFStringEncodingISOLatinArabic'/>
<enum value='517' name='kCFStringEncodingISOLatinCyrillic'/>
<enum value='519' name='kCFStringEncodingISOLatinGreek'/>
<enum value='520' name='kCFStringEncodingISOLatinHebrew'/>
<enum value='523' name='kCFStringEncodingISOLatinThai'/>
<enum value='2096' name='kCFStringEncodingISO_2022_CN'/>
<enum value='2097' name='kCFStringEncodingISO_2022_CN_EXT'/>
<enum value='2080' name='kCFStringEncodingISO_2022_JP'/>
<enum value='2082' name='kCFStringEncodingISO_2022_JP_1'/>
<enum value='2081' name='kCFStringEncodingISO_2022_JP_2'/>
<enum value='2083' name='kCFStringEncodingISO_2022_JP_3'/>
<enum value='2112' name='kCFStringEncodingISO_2022_KR'/>
<enum value='4294967295' name='kCFStringEncodingInvalidId'/>
<enum value='1572' name='kCFStringEncodingJIS_C6226_78'/>
<enum value='1568' name='kCFStringEncodingJIS_X0201_76'/>
<enum value='1569' name='kCFStringEncodingJIS_X0208_83'/>
<enum value='1570' name='kCFStringEncodingJIS_X0208_90'/>
<enum value='1571' name='kCFStringEncodingJIS_X0212_90'/>
<enum value='2562' name='kCFStringEncodingKOI8_R'/>
<enum value='2568' name='kCFStringEncodingKOI8_U'/>
<enum value='1600' name='kCFStringEncodingKSC_5601_87'/>
<enum value='1601' name='kCFStringEncodingKSC_5601_92_Johab'/>
<enum value='4' name='kCFStringEncodingMacArabic'/>
<enum value='24' name='kCFStringEncodingMacArmenian'/>
<enum value='13' name='kCFStringEncodingMacBengali'/>
<enum value='19' name='kCFStringEncodingMacBurmese'/>
<enum value='39' name='kCFStringEncodingMacCeltic'/>
<enum value='29' name='kCFStringEncodingMacCentralEurRoman'/>
<enum value='25' name='kCFStringEncodingMacChineseSimp'/>
<enum value='2' name='kCFStringEncodingMacChineseTrad'/>
<enum value='36' name='kCFStringEncodingMacCroatian'/>
<enum value='7' name='kCFStringEncodingMacCyrillic'/>
<enum value='9' name='kCFStringEncodingMacDevanagari'/>
<enum value='34' name='kCFStringEncodingMacDingbats'/>
<enum value='28' name='kCFStringEncodingMacEthiopic'/>
<enum value='31' name='kCFStringEncodingMacExtArabic'/>
<enum value='140' name='kCFStringEncodingMacFarsi'/>
<enum value='40' name='kCFStringEncodingMacGaelic'/>
<enum value='23' name='kCFStringEncodingMacGeorgian'/>
<enum value='6' name='kCFStringEncodingMacGreek'/>
<enum value='11' name='kCFStringEncodingMacGujarati'/>
<enum value='10' name='kCFStringEncodingMacGurmukhi'/>
<enum value='255' name='kCFStringEncodingMacHFS'/>
<enum value='5' name='kCFStringEncodingMacHebrew'/>
<enum value='37' name='kCFStringEncodingMacIcelandic'/>
<enum value='236' name='kCFStringEncodingMacInuit'/>
<enum value='1' name='kCFStringEncodingMacJapanese'/>
<enum value='16' name='kCFStringEncodingMacKannada'/>
<enum value='20' name='kCFStringEncodingMacKhmer'/>
<enum value='3' name='kCFStringEncodingMacKorean'/>
<enum value='22' name='kCFStringEncodingMacLaotian'/>
<enum value='17' name='kCFStringEncodingMacMalayalam'/>
<enum value='27' name='kCFStringEncodingMacMongolian'/>
<enum value='12' name='kCFStringEncodingMacOriya'/>
<enum value='0' name='kCFStringEncodingMacRoman'/>
<enum value='2564' name='kCFStringEncodingMacRomanLatin1'/>
<enum value='38' name='kCFStringEncodingMacRomanian'/>
<enum value='18' name='kCFStringEncodingMacSinhalese'/>
<enum value='33' name='kCFStringEncodingMacSymbol'/>
<enum value='14' name='kCFStringEncodingMacTamil'/>
<enum value='15' name='kCFStringEncodingMacTelugu'/>
<enum value='21' name='kCFStringEncodingMacThai'/>
<enum value='26' name='kCFStringEncodingMacTibetan'/>
<enum value='35' name='kCFStringEncodingMacTurkish'/>
<enum value='152' name='kCFStringEncodingMacUkrainian'/>
<enum value='252' name='kCFStringEncodingMacVT100'/>
<enum value='30' name='kCFStringEncodingMacVietnamese'/>
<enum value='2818' name='kCFStringEncodingNextStepJapanese'/>
<enum value='2817' name='kCFStringEncodingNextStepLatin'/>
<enum value='3071' name='kCFStringEncodingNonLossyASCII'/>
<enum value='2561' name='kCFStringEncodingShiftJIS'/>
<enum value='1576' name='kCFStringEncodingShiftJIS_X0213'/>
<enum value='1576' name='kCFStringEncodingShiftJIS_X0213_00'/>
<enum value='1577' name='kCFStringEncodingShiftJIS_X0213_MenKuTen'/>
<enum value='256' name='kCFStringEncodingUTF16'/>
<enum value='268435712' name='kCFStringEncodingUTF16BE'/>
<enum value='335544576' name='kCFStringEncodingUTF16LE'/>
<enum value='201326848' name='kCFStringEncodingUTF32'/>
<enum value='402653440' name='kCFStringEncodingUTF32BE'/>
<enum value='469762304' name='kCFStringEncodingUTF32LE'/>
<enum value='67109120' name='kCFStringEncodingUTF7'/>
<enum value='2576' name='kCFStringEncodingUTF7_IMAP'/>
<enum value='134217984' name='kCFStringEncodingUTF8'/>
<enum value='256' name='kCFStringEncodingUnicode'/>
<enum value='2567' name='kCFStringEncodingVISCII'/>
<enum value='1286' name='kCFStringEncodingWindowsArabic'/>
<enum value='1287' name='kCFStringEncodingWindowsBalticRim'/>
<enum value='1282' name='kCFStringEncodingWindowsCyrillic'/>
<enum value='1283' name='kCFStringEncodingWindowsGreek'/>
<enum value='1285' name='kCFStringEncodingWindowsHebrew'/>
<enum value='1296' name='kCFStringEncodingWindowsKoreanJohab'/>
<enum value='1280' name='kCFStringEncodingWindowsLatin1'/>
<enum value='1281' name='kCFStringEncodingWindowsLatin2'/>
<enum value='1284' name='kCFStringEncodingWindowsLatin5'/>
<enum value='1288' name='kCFStringEncodingWindowsVietnamese'/>
<enum value='2' name='kCFStringNormalizationFormC'/>
<enum value='0' name='kCFStringNormalizationFormD'/>
<enum value='3' name='kCFStringNormalizationFormKC'/>
<enum value='1' name='kCFStringNormalizationFormKD'/>
<enum value='131072' name='kCFStringTokenizerAttributeLanguage'/>
<enum value='65536' name='kCFStringTokenizerAttributeLatinTranscription'/>
<enum value='4' name='kCFStringTokenizerTokenHasDerivedSubTokensMask'/>
<enum value='8' name='kCFStringTokenizerTokenHasHasNumbersMask'/>
<enum value='16' name='kCFStringTokenizerTokenHasNonLettersMask'/>
<enum value='2' name='kCFStringTokenizerTokenHasSubTokensMask'/>
<enum value='32' name='kCFStringTokenizerTokenIsCJWordMask'/>
<enum value='0' name='kCFStringTokenizerTokenNone'/>
<enum value='1' name='kCFStringTokenizerTokenNormal'/>
<enum value='3' name='kCFStringTokenizerUnitLineBreak'/>
<enum value='2' name='kCFStringTokenizerUnitParagraph'/>
<enum value='1' name='kCFStringTokenizerUnitSentence'/>
<enum value='0' name='kCFStringTokenizerUnitWord'/>
<enum value='4' name='kCFStringTokenizerUnitWordBoundary'/>
<enum value='2' name='kCFTimeZoneNameStyleDaylightSaving'/>
<enum value='4' name='kCFTimeZoneNameStyleGeneric'/>
<enum value='3' name='kCFTimeZoneNameStyleShortDaylightSaving'/>
<enum value='5' name='kCFTimeZoneNameStyleShortGeneric'/>
<enum value='1' name='kCFTimeZoneNameStyleShortStandard'/>
<enum value='0' name='kCFTimeZoneNameStyleStandard'/>
<enum value='512' name='kCFURLBookmarkCreationMinimalBookmarkMask'/>
<enum value='256' name='kCFURLBookmarkCreationPreferFileIDResolutionMask'/>
<enum value='4096' name='kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess'/>
<enum value='1024' name='kCFURLBookmarkCreationSuitableForBookmarkFile'/>
<enum value='2048' name='kCFURLBookmarkCreationWithSecurityScope'/>
<enum value='1024' name='kCFURLBookmarkResolutionWithSecurityScope'/>
<enum value='12' name='kCFURLComponentFragment'/>
<enum value='8' name='kCFURLComponentHost'/>
<enum value='2' name='kCFURLComponentNetLocation'/>
<enum value='10' name='kCFURLComponentParameterString'/>
<enum value='6' name='kCFURLComponentPassword'/>
<enum value='3' name='kCFURLComponentPath'/>
<enum value='9' name='kCFURLComponentPort'/>
<enum value='11' name='kCFURLComponentQuery'/>
<enum value='4' name='kCFURLComponentResourceSpecifier'/>
<enum value='1' name='kCFURLComponentScheme'/>
<enum value='5' name='kCFURLComponentUser'/>
<enum value='7' name='kCFURLComponentUserInfo'/>
<enum value='0' name='kCFURLEnumeratorDefaultBehavior'/>
<enum value='1' name='kCFURLEnumeratorDescendRecursively'/>
<enum value='4' name='kCFURLEnumeratorDirectoryPostOrderSuccess'/>
<enum value='2' name='kCFURLEnumeratorEnd'/>
<enum value='3' name='kCFURLEnumeratorError'/>
<enum value='4' name='kCFURLEnumeratorGenerateFileReferenceURLs'/>
<enum value='32' name='kCFURLEnumeratorIncludeDirectoriesPostOrder'/>
<enum value='16' name='kCFURLEnumeratorIncludeDirectoriesPreOrder'/>
<enum value='2' name='kCFURLEnumeratorSkipInvisibles'/>
<enum value='8' name='kCFURLEnumeratorSkipPackageContents'/>
<enum value='1' name='kCFURLEnumeratorSuccess'/>
<enum value='1' name='kCFURLHFSPathStyle'/>
<enum value='-15' name='kCFURLImproperArgumentsError'/>
<enum value='0' name='kCFURLPOSIXPathStyle'/>
<enum value='-17' name='kCFURLPropertyKeyUnavailableError'/>
<enum value='-14' name='kCFURLRemoteHostUnavailableError'/>
<enum value='-13' name='kCFURLResourceAccessViolationError'/>
<enum value='-12' name='kCFURLResourceNotFoundError'/>
<enum value='-18' name='kCFURLTimeoutError'/>
<enum value='-10' name='kCFURLUnknownError'/>
<enum value='-16' name='kCFURLUnknownPropertyKeyError'/>
<enum value='-11' name='kCFURLUnknownSchemeError'/>
<enum value='2' name='kCFURLWindowsPathStyle'/>
<enum value='1' name='kCFUserNotificationAlternateResponse'/>
<enum value='3' name='kCFUserNotificationCancelResponse'/>
<enum value='2' name='kCFUserNotificationCautionAlertLevel'/>
<enum value='0' name='kCFUserNotificationDefaultResponse'/>
<enum value='32' name='kCFUserNotificationNoDefaultButtonFlag'/>
<enum value='1' name='kCFUserNotificationNoteAlertLevel'/>
<enum value='2' name='kCFUserNotificationOtherResponse'/>
<enum value='3' name='kCFUserNotificationPlainAlertLevel'/>
<enum value='0' name='kCFUserNotificationStopAlertLevel'/>
<enum value='64' name='kCFUserNotificationUseRadioButtonsFlag'/>
<enum value='4' name='kCFXMLEntityTypeCharacter'/>
<enum value='0' name='kCFXMLEntityTypeParameter'/>
<enum value='2' name='kCFXMLEntityTypeParsedExternal'/>
<enum value='1' name='kCFXMLEntityTypeParsedInternal'/>
<enum value='3' name='kCFXMLEntityTypeUnparsed'/>
<enum value='11' name='kCFXMLErrorElementlessDocument'/>
<enum value='3' name='kCFXMLErrorEncodingConversionFailure'/>
<enum value='7' name='kCFXMLErrorMalformedCDSect'/>
<enum value='13' name='kCFXMLErrorMalformedCharacterReference'/>
<enum value='8' name='kCFXMLErrorMalformedCloseTag'/>
<enum value='12' name='kCFXMLErrorMalformedComment'/>
<enum value='5' name='kCFXMLErrorMalformedDTD'/>
<enum value='10' name='kCFXMLErrorMalformedDocument'/>
<enum value='6' name='kCFXMLErrorMalformedName'/>
<enum value='14' name='kCFXMLErrorMalformedParsedCharacterData'/>
<enum value='4' name='kCFXMLErrorMalformedProcessingInstruction'/>
<enum value='9' name='kCFXMLErrorMalformedStartTag'/>
<enum value='15' name='kCFXMLErrorNoData'/>
<enum value='1' name='kCFXMLErrorUnexpectedEOF'/>
<enum value='2' name='kCFXMLErrorUnknownEncoding'/>
<enum value='1' name='kCFXMLNodeCurrentVersion'/>
<enum value='3' name='kCFXMLNodeTypeAttribute'/>
<enum value='15' name='kCFXMLNodeTypeAttributeListDeclaration'/>
<enum value='7' name='kCFXMLNodeTypeCDATASection'/>
<enum value='5' name='kCFXMLNodeTypeComment'/>
<enum value='1' name='kCFXMLNodeTypeDocument'/>
<enum value='8' name='kCFXMLNodeTypeDocumentFragment'/>
<enum value='11' name='kCFXMLNodeTypeDocumentType'/>
<enum value='2' name='kCFXMLNodeTypeElement'/>
<enum value='14' name='kCFXMLNodeTypeElementTypeDeclaration'/>
<enum value='9' name='kCFXMLNodeTypeEntity'/>
<enum value='10' name='kCFXMLNodeTypeEntityReference'/>
<enum value='13' name='kCFXMLNodeTypeNotation'/>
<enum value='4' name='kCFXMLNodeTypeProcessingInstruction'/>
<enum value='6' name='kCFXMLNodeTypeText'/>
<enum value='12' name='kCFXMLNodeTypeWhitespace'/>
<enum value='32' name='kCFXMLParserAddImpliedAttributes'/>
<enum value='16777215' name='kCFXMLParserAllOptions'/>
<enum value='0' name='kCFXMLParserNoOptions'/>
<enum value='4' name='kCFXMLParserReplacePhysicalEntities'/>
<enum value='16' name='kCFXMLParserResolveExternalEntities'/>
<enum value='2' name='kCFXMLParserSkipMetaData'/>
<enum value='8' name='kCFXMLParserSkipWhitespace'/>
<enum value='1' name='kCFXMLParserValidateDocument'/>
<enum value='-1' name='kCFXMLStatusParseInProgress'/>
<enum value='-2' name='kCFXMLStatusParseNotBegun'/>
<enum value='0' name='kCFXMLStatusParseSuccessful'/>
<function name='CFAbsoluteTimeAddGregorianUnits'>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<arg type='{_CFGregorianUnits=iiiiid}'/>
<retval type='d'/>
</function>
<function name='CFAbsoluteTimeGetCurrent'>
<retval type='d'/>
</function>
<function name='CFAbsoluteTimeGetDayOfWeek'>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFAbsoluteTimeGetDayOfYear'>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFAbsoluteTimeGetDifferenceAsGregorianUnits'>
<arg type='d'/>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<arg type64='Q' type='L'/>
<retval type='{_CFGregorianUnits=iiiiid}'/>
</function>
<function name='CFAbsoluteTimeGetGregorianDate'>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<retval type='{_CFGregorianDate=iccccd}'/>
</function>
<function name='CFAbsoluteTimeGetWeekOfYear'>
<arg type='d'/>
<arg type='^{__CFTimeZone=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFAllocatorAllocate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<retval type='^v'/>
</function>
<function name='CFAllocatorCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type64='^{_CFAllocatorContext=q^v^?^?^?^?^?^?^?}' type='^{_CFAllocatorContext=i^v^?^?^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFAllocator=}'/>
</function>
<function name='CFAllocatorDeallocate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFAllocatorGetContext'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='o' type64='^{_CFAllocatorContext=q^v^?^?^?^?^?^?^?}' type='^{_CFAllocatorContext=i^v^?^?^?^?^?^?^?}'/>
</function>
<function name='CFAllocatorGetDefault'>
<retval type='^{__CFAllocator=}'/>
</function>
<function name='CFAllocatorGetPreferredSizeForSize'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFAllocatorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFAllocatorReallocate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^v'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<retval type='^v'/>
</function>
<function name='CFAllocatorSetDefault'>
<arg type='^{__CFAllocator=}'/>
</function>
<function name='CFArrayAppendArray'>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFArrayAppendValue'>
<arg type='^{__CFArray=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFArrayApplyFunction'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFArrayBSearchValues'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type64='q' type='l'/>
</arg>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFArrayContainsValue'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFArrayCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_of_fixed_length='2' type='^^v'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFArrayCallBacks=q^?^?^?^?}' type='^{_CFArrayCallBacks=i^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFArrayCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFArrayCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFArrayCallBacks=q^?^?^?^?}' type='^{_CFArrayCallBacks=i^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFArrayCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFArrayExchangeValuesAtIndices'>
<arg type='^{__CFArray=}'/>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
</function>
<function name='CFArrayGetCount'>
<arg type='^{__CFArray=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFArrayGetCountOfValue'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFArrayGetFirstIndexOfValue'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFArrayGetLastIndexOfValue'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFArrayGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFArrayGetValueAtIndex'>
<arg type='^{__CFArray=}'/>
<arg type64='q' type='l'/>
<retval type='^v'/>
</function>
<function name='CFArrayGetValues'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFArrayInsertValueAtIndex'>
<arg type='^{__CFArray=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFArrayRemoveAllValues'>
<arg type='^{__CFArray=}'/>
</function>
<function name='CFArrayRemoveValueAtIndex'>
<arg type='^{__CFArray=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFArrayReplaceValues'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' c_array_length_in_arg='3' type='^^v'/>
<arg type64='q' type='l'/>
</function>
<function name='CFArraySetValueAtIndex'>
<arg type='^{__CFArray=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFArraySortValues'>
<arg type='^{__CFArray=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type64='q' type='l'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFAttributedStringBeginEditing'>
<arg type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFAttributedString=}'/>
<retval already_retained='true' type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFAttributedString=}'/>
<retval already_retained='true' type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringCreateWithSubstring'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<retval already_retained='true' type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringEndEditing'>
<arg type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringGetAttribute'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='@'/>
</function>
<function name='CFAttributedStringGetAttributeAndLongestEffectiveRange'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='@'/>
</function>
<function name='CFAttributedStringGetAttributes'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CFAttributedStringGetAttributesAndLongestEffectiveRange'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='q' type='l'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CFAttributedStringGetLength'>
<arg type='^{__CFAttributedString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFAttributedStringGetMutableString'>
<arg type='^{__CFAttributedString=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFAttributedStringGetString'>
<arg type='^{__CFAttributedString=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFAttributedStringGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFAttributedStringRemoveAttribute'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFAttributedStringReplaceAttributedString'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFAttributedString=}'/>
</function>
<function name='CFAttributedStringReplaceString'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFAttributedStringSetAttribute'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
</function>
<function name='CFAttributedStringSetAttributes'>
<arg type='^{__CFAttributedString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFDictionary=}'/>
<arg type='B'/>
</function>
<function name='CFBagAddValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBagApplyFunction'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBagContainsValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFBagCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_of_fixed_length='2' type='^^v'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFBagCallBacks=q^?^?^?^?^?}' type='^{_CFBagCallBacks=i^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFBag=}'/>
</function>
<function name='CFBagCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFBag=}'/>
<retval already_retained='true' type='^{__CFBag=}'/>
</function>
<function name='CFBagCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFBagCallBacks=q^?^?^?^?^?}' type='^{_CFBagCallBacks=i^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFBag=}'/>
</function>
<function name='CFBagCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFBag=}'/>
<retval already_retained='true' type='^{__CFBag=}'/>
</function>
<function name='CFBagGetCount'>
<arg type='^{__CFBag=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBagGetCountOfValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBagGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFBagGetValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='^v'/>
</function>
<function name='CFBagGetValueIfPresent'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='o' type='^^v'/>
<retval type='B'/>
</function>
<function name='CFBagGetValues'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFBagRemoveAllValues'>
<arg type='^{__CFBag=}'/>
</function>
<function name='CFBagRemoveValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBagReplaceValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBagSetValue'>
<arg type='^{__CFBag=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBinaryHeapAddValue'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBinaryHeapApplyFunction'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFBinaryHeapContainsValue'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFBinaryHeapCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFBinaryHeapCallBacks=q^?^?^?^?}' type='^{_CFBinaryHeapCallBacks=i^?^?^?^?}'/>
<arg type_modifier='n' type64='^{_CFBinaryHeapCompareContext=q^v^?^?^?}' type='^{_CFBinaryHeapCompareContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFBinaryHeap=}'/>
</function>
<function name='CFBinaryHeapCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFBinaryHeap=}'/>
<retval already_retained='true' type='^{__CFBinaryHeap=}'/>
</function>
<function name='CFBinaryHeapGetCount'>
<arg type='^{__CFBinaryHeap=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBinaryHeapGetCountOfValue'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBinaryHeapGetMinimum'>
<arg type='^{__CFBinaryHeap=}'/>
<retval type='^v'/>
</function>
<function name='CFBinaryHeapGetMinimumIfPresent'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='o' type='^^v'/>
<retval type='B'/>
</function>
<function name='CFBinaryHeapGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFBinaryHeapGetValues'>
<arg type='^{__CFBinaryHeap=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFBinaryHeapRemoveAllValues'>
<arg type='^{__CFBinaryHeap=}'/>
</function>
<function name='CFBinaryHeapRemoveMinimumValue'>
<arg type='^{__CFBinaryHeap=}'/>
</function>
<function name='CFBitVectorContainsBit'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
<retval type='B'/>
</function>
<function name='CFBitVectorCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_of_fixed_length='2' type='*'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFBitVector=}'/>
</function>
<function name='CFBitVectorCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFBitVector=}'/>
<retval already_retained='true' type='^{__CFBitVector=}'/>
</function>
<function name='CFBitVectorCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFBitVector=}'/>
</function>
<function name='CFBitVectorCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFBitVector=}'/>
<retval already_retained='true' type='^{__CFBitVector=}'/>
</function>
<function name='CFBitVectorFlipBitAtIndex'>
<arg type='^{__CFBitVector=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFBitVectorFlipBits'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFBitVectorGetBitAtIndex'>
<arg type='^{__CFBitVector=}'/>
<arg type64='q' type='l'/>
<retval type64='I' type='L'/>
</function>
<function name='CFBitVectorGetBits'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='*'/>
</function>
<function name='CFBitVectorGetCount'>
<arg type='^{__CFBitVector=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBitVectorGetCountOfBit'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBitVectorGetFirstIndexOfBit'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBitVectorGetLastIndexOfBit'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFBitVectorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFBitVectorSetAllBits'>
<arg type='^{__CFBitVector=}'/>
<arg type64='I' type='L'/>
</function>
<function name='CFBitVectorSetBitAtIndex'>
<arg type='^{__CFBitVector=}'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
</function>
<function name='CFBitVectorSetBits'>
<arg type='^{__CFBitVector=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
</function>
<function name='CFBitVectorSetCount'>
<arg type='^{__CFBitVector=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFBooleanGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFBooleanGetValue'>
<arg type='^{__CFBoolean=}'/>
<retval type='B'/>
</function>
<function name='CFBundleCloseBundleResourceMap'>
<arg type='^{__CFBundle=}'/>
<arg type64='i' type='s'/>
</function>
<function name='CFBundleCopyAuxiliaryExecutableURL'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyBuiltInPlugInsURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyBundleLocalizations'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyBundleURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyExecutableArchitectures'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyExecutableArchitecturesForURL'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyExecutableURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyInfoDictionaryForURL'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFBundleCopyInfoDictionaryInDirectory'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFBundleCopyLocalizationsForPreferences'>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyLocalizationsForURL'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyLocalizedString'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFBundleCopyPreferredLocalizationsFromArray'>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyPrivateFrameworksURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyResourceURL'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyResourceURLForLocalization'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyResourceURLInDirectory'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopyResourceURLsOfType'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyResourceURLsOfTypeForLocalization'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyResourceURLsOfTypeInDirectory'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleCopyResourcesDirectoryURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopySharedFrameworksURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopySharedSupportURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCopySupportFilesDirectoryURL'>
<arg type='^{__CFBundle=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFBundleCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFBundle=}'/>
</function>
<function name='CFBundleCreateBundlesFromDirectory'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFBundleGetAllBundles'>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFBundleGetBundleWithIdentifier'>
<arg type='^{__CFString=}'/>
<retval type='^{__CFBundle=}'/>
</function>
<function name='CFBundleGetDataPointerForName'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<retval type='^v'/>
</function>
<function name='CFBundleGetDataPointersForNames'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFArray=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFBundleGetDevelopmentRegion'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFBundleGetFunctionPointerForName'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<retval type='^v'/>
</function>
<function name='CFBundleGetFunctionPointersForNames'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFArray=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFBundleGetIdentifier'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFBundleGetInfoDictionary'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CFBundleGetLocalInfoDictionary'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CFBundleGetMainBundle'>
<retval type='^{__CFBundle=}'/>
</function>
<function name='CFBundleGetPackageInfo'>
<arg type='^{__CFBundle=}'/>
<arg type_modifier='o' type='^I'/>
<arg type_modifier='o' type='^I'/>
</function>
<function name='CFBundleGetPackageInfoInDirectory'>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' type='^I'/>
<arg type_modifier='o' type='^I'/>
<retval type='B'/>
</function>
<function name='CFBundleGetPlugIn'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFBundle=}'/>
</function>
<function name='CFBundleGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFBundleGetValueForInfoDictionaryKey'>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<retval type='@'/>
</function>
<function name='CFBundleGetVersionNumber'>
<arg type='^{__CFBundle=}'/>
<retval type64='I' type='L'/>
</function>
<function name='CFBundleIsExecutableLoaded'>
<arg type='^{__CFBundle=}'/>
<retval type='B'/>
</function>
<function name='CFBundleLoadExecutable'>
<arg type='^{__CFBundle=}'/>
<retval type='B'/>
</function>
<function name='CFBundleLoadExecutableAndReturnError'>
<arg type='^{__CFBundle=}'/>
<arg type_modifier='o' type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFBundleOpenBundleResourceFiles'>
<arg type='^{__CFBundle=}'/>
<arg type_modifier='o' type64='^i' type='^s'/>
<arg type_modifier='o' type64='^i' type='^s'/>
<retval type64='i' type='l'/>
</function>
<function name='CFBundleOpenBundleResourceMap'>
<arg type='^{__CFBundle=}'/>
<retval type64='i' type='s'/>
</function>
<function name='CFBundlePreflightExecutable'>
<arg type='^{__CFBundle=}'/>
<arg type_modifier='o' type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFBundleUnloadExecutable'>
<arg type='^{__CFBundle=}'/>
</function>
<function name='CFByteOrderGetCurrent' inline='true'>
<retval type64='q' type='l'/>
</function>
<function name='CFCalendarAddComponents' variadic='true'>
<arg type='^{__CFCalendar=}'/>
<arg type_modifier='N' type='^d'/>
<arg type64='Q' type='L'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CFCalendarComposeAbsoluteTime' variadic='true'>
<arg type='^{__CFCalendar=}'/>
<arg type_modifier='o' type='^d'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CFCalendarCopyCurrent'>
<retval already_retained='true' type='^{__CFCalendar=}'/>
</function>
<function name='CFCalendarCopyLocale'>
<arg type='^{__CFCalendar=}'/>
<retval already_retained='true' type='^{__CFLocale=}'/>
</function>
<function name='CFCalendarCopyTimeZone'>
<arg type='^{__CFCalendar=}'/>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFCalendarCreateWithIdentifier'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFCalendar=}'/>
</function>
<function name='CFCalendarDecomposeAbsoluteTime' variadic='true'>
<arg type='^{__CFCalendar=}'/>
<arg type='d'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CFCalendarGetComponentDifference' variadic='true'>
<arg type='^{__CFCalendar=}'/>
<arg type='d'/>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CFCalendarGetFirstWeekday'>
<arg type='^{__CFCalendar=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFCalendarGetIdentifier'>
<arg type='^{__CFCalendar=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFCalendarGetMaximumRangeOfUnit'>
<arg type='^{__CFCalendar=}'/>
<arg type64='Q' type='L'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFCalendarGetMinimumDaysInFirstWeek'>
<arg type='^{__CFCalendar=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFCalendarGetMinimumRangeOfUnit'>
<arg type='^{__CFCalendar=}'/>
<arg type64='Q' type='L'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFCalendarGetOrdinalityOfUnit'>
<arg type='^{__CFCalendar=}'/>
<arg type64='Q' type='L'/>
<arg type64='Q' type='L'/>
<arg type='d'/>
<retval type64='q' type='l'/>
</function>
<function name='CFCalendarGetRangeOfUnit'>
<arg type='^{__CFCalendar=}'/>
<arg type64='Q' type='L'/>
<arg type64='Q' type='L'/>
<arg type='d'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFCalendarGetTimeRangeOfUnit'>
<arg type='^{__CFCalendar=}'/>
<arg type64='Q' type='L'/>
<arg type='d'/>
<arg type_modifier='o' type='^d'/>
<arg type_modifier='o' type='^d'/>
<retval type='B'/>
</function>
<function name='CFCalendarGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFCalendarSetFirstWeekday'>
<arg type='^{__CFCalendar=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFCalendarSetLocale'>
<arg type='^{__CFCalendar=}'/>
<arg type='^{__CFLocale=}'/>
</function>
<function name='CFCalendarSetMinimumDaysInFirstWeek'>
<arg type='^{__CFCalendar=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFCalendarSetTimeZone'>
<arg type='^{__CFCalendar=}'/>
<arg type='^{__CFTimeZone=}'/>
</function>
<function name='CFCharacterSetAddCharactersInRange'>
<arg type='^{__CFCharacterSet=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFCharacterSetAddCharactersInString'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFCharacterSetCreateBitmapRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFCharacterSet=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFCharacterSetCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFCharacterSet=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateInvertedSet'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFCharacterSet=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFCharacterSet=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateWithBitmapRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateWithCharactersInRange'>
<arg type='^{__CFAllocator=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetCreateWithCharactersInString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetGetPredefined'>
<arg type64='q' type='l'/>
<retval type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFCharacterSetHasMemberInPlane'>
<arg type='^{__CFCharacterSet=}'/>
<arg type64='q' type='l'/>
<retval type='B'/>
</function>
<function name='CFCharacterSetIntersect'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetInvert'>
<arg type='^{__CFCharacterSet=}'/>
</function>
<function name='CFCharacterSetIsCharacterMember'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='S'/>
<retval type='B'/>
</function>
<function name='CFCharacterSetIsLongCharacterMember'>
<arg type='^{__CFCharacterSet=}'/>
<arg type64='I' type='L'/>
<retval type='B'/>
</function>
<function name='CFCharacterSetIsSupersetOfSet'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='^{__CFCharacterSet=}'/>
<retval type='B'/>
</function>
<function name='CFCharacterSetRemoveCharactersInRange'>
<arg type='^{__CFCharacterSet=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFCharacterSetRemoveCharactersInString'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFCharacterSetUnion'>
<arg type='^{__CFCharacterSet=}'/>
<arg type='^{__CFCharacterSet=}'/>
</function>
<function name='CFConvertDoubleHostToSwapped' inline='true'>
<arg type='d'/>
<retval type='{_CFSwappedFloat64=Q}'/>
</function>
<function name='CFConvertDoubleSwappedToHost' inline='true'>
<arg type='{_CFSwappedFloat64=Q}'/>
<retval type='d'/>
</function>
<function name='CFConvertFloat32HostToSwapped' inline='true'>
<arg type='f'/>
<retval type='{_CFSwappedFloat32=I}'/>
</function>
<function name='CFConvertFloat32SwappedToHost' inline='true'>
<arg type='{_CFSwappedFloat32=I}'/>
<retval type='f'/>
</function>
<function name='CFConvertFloat64HostToSwapped' inline='true'>
<arg type='d'/>
<retval type='{_CFSwappedFloat64=Q}'/>
</function>
<function name='CFConvertFloat64SwappedToHost' inline='true'>
<arg type='{_CFSwappedFloat64=Q}'/>
<retval type='d'/>
</function>
<function name='CFConvertFloatHostToSwapped' inline='true'>
<arg type='f'/>
<retval type='{_CFSwappedFloat32=I}'/>
</function>
<function name='CFConvertFloatSwappedToHost' inline='true'>
<arg type='{_CFSwappedFloat32=I}'/>
<retval type='f'/>
</function>
<function name='CFCopyDescription'>
<arg type='@'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFCopyTypeIDDescription'>
<arg type64='Q' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFDataAppendBytes'>
<arg type='^{__CFData=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
</function>
<function name='CFDataCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFDataCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFDataCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFDataCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFDataCreateWithBytesNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFDataDeleteBytes'>
<arg type='^{__CFData=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFDataFind'>
<arg type='^{__CFData=}'/>
<arg type='^{__CFData=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFDataGetBytePtr'>
<arg type='^{__CFData=}'/>
<retval type='*'/>
</function>
<function name='CFDataGetBytes'>
<arg type='^{__CFData=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='*'/>
</function>
<function name='CFDataGetLength'>
<arg type='^{__CFData=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDataGetMutableBytePtr'>
<arg type='^{__CFData=}'/>
<retval type='*'/>
</function>
<function name='CFDataGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFDataIncreaseLength'>
<arg type='^{__CFData=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFDataReplaceBytes'>
<arg type='^{__CFData=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='n' c_array_length_in_arg='3' type='*'/>
<arg type64='q' type='l'/>
</function>
<function name='CFDataSetLength'>
<arg type='^{__CFData=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFDateCompare'>
<arg type='^{__CFDate=}'/>
<arg type='^{__CFDate=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDateCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='d'/>
<retval already_retained='true' type='^{__CFDate=}'/>
</function>
<function name='CFDateFormatterCopyProperty'>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFDateFormatterCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFLocale=}'/>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFDateFormatter=}'/>
</function>
<function name='CFDateFormatterCreateDateFormatFromTemplate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFDateFormatterCreateDateFromString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval already_retained='true' type='^{__CFDate=}'/>
</function>
<function name='CFDateFormatterCreateStringWithAbsoluteTime'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDateFormatter=}'/>
<arg type='d'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFDateFormatterCreateStringWithDate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFDate=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFDateFormatterGetAbsoluteTimeFromString'>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<arg type_modifier='o' type='^d'/>
<retval type='B'/>
</function>
<function name='CFDateFormatterGetDateStyle'>
<arg type='^{__CFDateFormatter=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDateFormatterGetFormat'>
<arg type='^{__CFDateFormatter=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFDateFormatterGetLocale'>
<arg type='^{__CFDateFormatter=}'/>
<retval type='^{__CFLocale=}'/>
</function>
<function name='CFDateFormatterGetTimeStyle'>
<arg type='^{__CFDateFormatter=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDateFormatterGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFDateFormatterSetFormat'>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFDateFormatterSetProperty'>
<arg type='^{__CFDateFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
</function>
<function name='CFDateGetAbsoluteTime'>
<arg type='^{__CFDate=}'/>
<retval type='d'/>
</function>
<function name='CFDateGetTimeIntervalSinceDate'>
<arg type='^{__CFDate=}'/>
<arg type='^{__CFDate=}'/>
<retval type='d'/>
</function>
<function name='CFDateGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFDictionaryAddValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFDictionaryApplyFunction'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFDictionaryContainsKey'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFDictionaryContainsValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFDictionaryCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='3' type='^^v'/>
<arg type_modifier='n' c_array_length_in_arg='3' type='^^v'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFDictionaryKeyCallBacks=q^?^?^?^?^?}' type='^{_CFDictionaryKeyCallBacks=i^?^?^?^?^?}'/>
<arg type_modifier='n' type64='^{_CFDictionaryValueCallBacks=q^?^?^?^?}' type='^{_CFDictionaryValueCallBacks=i^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFDictionaryCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFDictionaryCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFDictionaryKeyCallBacks=q^?^?^?^?^?}' type='^{_CFDictionaryKeyCallBacks=i^?^?^?^?^?}'/>
<arg type_modifier='n' type64='^{_CFDictionaryValueCallBacks=q^?^?^?^?}' type='^{_CFDictionaryValueCallBacks=i^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFDictionaryCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFDictionaryGetCount'>
<arg type='^{__CFDictionary=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDictionaryGetCountOfKey'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDictionaryGetCountOfValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFDictionaryGetKeysAndValues'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFDictionaryGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFDictionaryGetValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='^v'/>
</function>
<function name='CFDictionaryGetValueIfPresent'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='o' type='^^v'/>
<retval type='B'/>
</function>
<function name='CFDictionaryRemoveAllValues'>
<arg type='^{__CFDictionary=}'/>
</function>
<function name='CFDictionaryRemoveValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFDictionaryReplaceValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFDictionarySetValue'>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFEqual'>
<arg type='@'/>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='CFErrorCopyDescription'>
<arg type='^{__CFError=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFErrorCopyFailureReason'>
<arg type='^{__CFError=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFErrorCopyRecoverySuggestion'>
<arg type='^{__CFError=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFErrorCopyUserInfo'>
<arg type='^{__CFError=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFErrorCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFError=}'/>
</function>
<function name='CFErrorCreateWithUserInfoKeysAndValues'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' c_array_length_in_arg='5' type='^^v'/>
<arg type_modifier='n' c_array_length_in_arg='5' type='^^v'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFError=}'/>
</function>
<function name='CFErrorGetCode'>
<arg type='^{__CFError=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFErrorGetDomain'>
<arg type='^{__CFError=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFErrorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFFileDescriptorCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='i'/>
<arg type='B'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFFileDescriptor=}'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFFileDescriptorContext=q^v^?^?^?}' type='^{_CFFileDescriptorContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFFileDescriptor=}'/>
</function>
<function name='CFFileDescriptorCreateRunLoopSource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFFileDescriptor=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFFileDescriptorDisableCallBacks'>
<arg type='^{__CFFileDescriptor=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFFileDescriptorEnableCallBacks'>
<arg type='^{__CFFileDescriptor=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFFileDescriptorGetContext'>
<arg type='^{__CFFileDescriptor=}'/>
<arg type_modifier='o' type64='^{_CFFileDescriptorContext=q^v^?^?^?}' type='^{_CFFileDescriptorContext=i^v^?^?^?}'/>
</function>
<function name='CFFileDescriptorGetNativeDescriptor'>
<arg type='^{__CFFileDescriptor=}'/>
<retval type='i'/>
</function>
<function name='CFFileDescriptorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFFileDescriptorInvalidate'>
<arg type='^{__CFFileDescriptor=}'/>
</function>
<function name='CFFileDescriptorIsValid'>
<arg type='^{__CFFileDescriptor=}'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityClearProperties'>
<arg type='^{__CFFileSecurity=}'/>
<arg type64='Q' type='L'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityCopyAccessControlList'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^^{_acl}'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityCopyGroupUUID'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^^{__CFUUID}'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityCopyOwnerUUID'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^^{__CFUUID}'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityCreate'>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFFileSecurity=}'/>
</function>
<function name='CFFileSecurityCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFFileSecurity=}'/>
<retval already_retained='true' type='^{__CFFileSecurity=}'/>
</function>
<function name='CFFileSecurityGetGroup'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^I'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityGetMode'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^S'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityGetOwner'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^I'/>
<retval type='B'/>
</function>
<function name='CFFileSecurityGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFFileSecuritySetAccessControlList'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^{_acl=}'/>
<retval type='B'/>
</function>
<function name='CFFileSecuritySetGroup'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='I'/>
<retval type='B'/>
</function>
<function name='CFFileSecuritySetGroupUUID'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='B'/>
</function>
<function name='CFFileSecuritySetMode'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='S'/>
<retval type='B'/>
</function>
<function name='CFFileSecuritySetOwner'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='I'/>
<retval type='B'/>
</function>
<function name='CFFileSecuritySetOwnerUUID'>
<arg type='^{__CFFileSecurity=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='B'/>
</function>
<function name='CFGetAllocator'>
<arg type='@'/>
<retval type='^{__CFAllocator=}'/>
</function>
<function name='CFGetRetainCount'>
<arg type='@'/>
<retval type64='q' type='l'/>
</function>
<function name='CFGetTypeID'>
<arg type='@'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFGregorianDateGetAbsoluteTime'>
<arg type='{_CFGregorianDate=iccccd}'/>
<arg type='^{__CFTimeZone=}'/>
<retval type='d'/>
</function>
<function name='CFGregorianDateIsValid'>
<arg type='{_CFGregorianDate=iccccd}'/>
<arg type64='Q' type='L'/>
<retval type='B'/>
</function>
<function name='CFHash'>
<arg type='@'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFLocaleCopyAvailableLocaleIdentifiers'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCopyCommonISOCurrencyCodes'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCopyCurrent'>
<retval already_retained='true' type='^{__CFLocale=}'/>
</function>
<function name='CFLocaleCopyDisplayNameForPropertyValue'>
<arg type='^{__CFLocale=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleCopyISOCountryCodes'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCopyISOCurrencyCodes'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCopyISOLanguageCodes'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCopyPreferredLanguages'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFLocaleCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFLocale=}'/>
</function>
<function name='CFLocaleCreateCanonicalLanguageIdentifierFromString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes'>
<arg type='^{__CFAllocator=}'/>
<arg type='s'/>
<arg type='s'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleCreateCanonicalLocaleIdentifierFromString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleCreateComponentsFromLocaleIdentifier'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFLocaleCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFLocale=}'/>
<retval already_retained='true' type='^{__CFLocale=}'/>
</function>
<function name='CFLocaleCreateLocaleIdentifierFromComponents'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode'>
<arg type='^{__CFAllocator=}'/>
<arg type='I'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFLocaleGetIdentifier'>
<arg type='^{__CFLocale=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFLocaleGetLanguageCharacterDirection'>
<arg type='^{__CFString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFLocaleGetLanguageLineDirection'>
<arg type='^{__CFString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFLocaleGetSystem'>
<retval type='^{__CFLocale=}'/>
</function>
<function name='CFLocaleGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFLocaleGetValue'>
<arg type='^{__CFLocale=}'/>
<arg type='^{__CFString=}'/>
<retval type='@'/>
</function>
<function name='CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier'>
<arg type='^{__CFString=}'/>
<retval type='I'/>
</function>
<function name='CFMachPortCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFMachPort=}'/>
<arg type='^v'/>
<arg type64='q' type='l'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFMachPortContext=q^v^?^?^?}' type='^{_CFMachPortContext=i^v^?^?^?}'/>
<arg type_modifier='o' type='^B'/>
<retval already_retained='true' type='^{__CFMachPort=}'/>
</function>
<function name='CFMachPortCreateRunLoopSource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFMachPort=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFMachPortCreateWithPort'>
<arg type='^{__CFAllocator=}'/>
<arg type='I'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFMachPort=}'/>
<arg type='^v'/>
<arg type64='q' type='l'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFMachPortContext=q^v^?^?^?}' type='^{_CFMachPortContext=i^v^?^?^?}'/>
<arg type_modifier='o' type='^B'/>
<retval already_retained='true' type='^{__CFMachPort=}'/>
</function>
<function name='CFMachPortGetContext'>
<arg type='^{__CFMachPort=}'/>
<arg type_modifier='o' type64='^{_CFMachPortContext=q^v^?^?^?}' type='^{_CFMachPortContext=i^v^?^?^?}'/>
</function>
<function name='CFMachPortGetInvalidationCallBack'>
<arg type='^{__CFMachPort=}'/>
<retval function_pointer='true' type='^?'>
<arg type='^{__CFMachPort=}'/>
<arg type='^v'/>
<retval type='v'/>
</retval>
</function>
<function name='CFMachPortGetPort'>
<arg type='^{__CFMachPort=}'/>
<retval type='I'/>
</function>
<function name='CFMachPortGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFMachPortInvalidate'>
<arg type='^{__CFMachPort=}'/>
</function>
<function name='CFMachPortIsValid'>
<arg type='^{__CFMachPort=}'/>
<retval type='B'/>
</function>
<function name='CFMachPortSetInvalidationCallBack'>
<arg type='^{__CFMachPort=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFMachPort=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
</function>
<function name='CFMakeCollectable'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='CFMessagePortCreateLocal'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFMessagePort=}'/>
<arg type64='i' type='l'/>
<arg type='^{__CFData=}'/>
<arg type='^v'/>
<retval type='^{__CFData=}'/>
</arg>
<arg type_modifier='n' type64='^{_CFMessagePortContext=q^v^?^?^?}' type='^{_CFMessagePortContext=i^v^?^?^?}'/>
<arg type_modifier='o' type='^B'/>
<retval already_retained='true' type='^{__CFMessagePort=}'/>
</function>
<function name='CFMessagePortCreateRemote'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFMessagePort=}'/>
</function>
<function name='CFMessagePortCreateRunLoopSource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFMessagePort=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFMessagePortGetContext'>
<arg type='^{__CFMessagePort=}'/>
<arg type_modifier='o' type64='^{_CFMessagePortContext=q^v^?^?^?}' type='^{_CFMessagePortContext=i^v^?^?^?}'/>
</function>
<function name='CFMessagePortGetInvalidationCallBack'>
<arg type='^{__CFMessagePort=}'/>
<retval function_pointer='true' type='^?'>
<arg type='^{__CFMessagePort=}'/>
<arg type='^v'/>
<retval type='v'/>
</retval>
</function>
<function name='CFMessagePortGetName'>
<arg type='^{__CFMessagePort=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFMessagePortGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFMessagePortInvalidate'>
<arg type='^{__CFMessagePort=}'/>
</function>
<function name='CFMessagePortIsRemote'>
<arg type='^{__CFMessagePort=}'/>
<retval type='B'/>
</function>
<function name='CFMessagePortIsValid'>
<arg type='^{__CFMessagePort=}'/>
<retval type='B'/>
</function>
<function name='CFMessagePortSendRequest'>
<arg type='^{__CFMessagePort=}'/>
<arg type64='i' type='l'/>
<arg type='^{__CFData=}'/>
<arg type='d'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^^{__CFData}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFMessagePortSetDispatchQueue'>
<arg type='^{__CFMessagePort=}'/>
<arg type='@'/>
</function>
<function name='CFMessagePortSetInvalidationCallBack'>
<arg type='^{__CFMessagePort=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFMessagePort=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
</function>
<function name='CFMessagePortSetName'>
<arg type='^{__CFMessagePort=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFNotificationCenterAddObserver'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type='^v'/>
<arg type='^{__CFString=}'/>
<arg type='^v'/>
<arg type='^{__CFDictionary=}'/>
<retval type='v'/>
</arg>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^v'/>
<arg type64='q' type='l'/>
</function>
<function name='CFNotificationCenterGetDarwinNotifyCenter'>
<retval type='^{__CFNotificationCenter=}'/>
</function>
<function name='CFNotificationCenterGetDistributedCenter'>
<retval type='^{__CFNotificationCenter=}'/>
</function>
<function name='CFNotificationCenterGetLocalCenter'>
<retval type='^{__CFNotificationCenter=}'/>
</function>
<function name='CFNotificationCenterGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNotificationCenterPostNotification'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^v'/>
<arg type='^{__CFDictionary=}'/>
<arg type='B'/>
</function>
<function name='CFNotificationCenterPostNotificationWithOptions'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^v'/>
<arg type='^{__CFDictionary=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFNotificationCenterRemoveEveryObserver'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFNotificationCenterRemoveObserver'>
<arg type='^{__CFNotificationCenter=}'/>
<arg type_modifier='n' type='^v'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFNullGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNumberCompare'>
<arg type='^{__CFNumber=}'/>
<arg type='^{__CFNumber=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNumberCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type='^v'/>
<retval already_retained='true' type='^{__CFNumber=}'/>
</function>
<function name='CFNumberFormatterCopyProperty'>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFNumberFormatterCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFLocale=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFNumberFormatter=}'/>
</function>
<function name='CFNumberFormatterCreateNumberFromString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<retval already_retained='true' type='^{__CFNumber=}'/>
</function>
<function name='CFNumberFormatterCreateStringWithNumber'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFNumber=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFNumberFormatterCreateStringWithValue'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNumberFormatter=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type='^v'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFNumberFormatterGetDecimalInfoForCurrencyCode'>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^i'/>
<arg type_modifier='o' type='^d'/>
<retval type='B'/>
</function>
<function name='CFNumberFormatterGetFormat'>
<arg type='^{__CFNumberFormatter=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNumberFormatterGetLocale'>
<arg type='^{__CFNumberFormatter=}'/>
<retval type='^{__CFLocale=}'/>
</function>
<function name='CFNumberFormatterGetStyle'>
<arg type='^{__CFNumberFormatter=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNumberFormatterGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNumberFormatterGetValueFromString'>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type='^v'/>
<retval type='B'/>
</function>
<function name='CFNumberFormatterSetFormat'>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNumberFormatterSetProperty'>
<arg type='^{__CFNumberFormatter=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
</function>
<function name='CFNumberGetByteSize'>
<arg type='^{__CFNumber=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNumberGetType'>
<arg type='^{__CFNumber=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNumberGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNumberGetValue'>
<arg type='^{__CFNumber=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type='^v'/>
<retval type='B'/>
</function>
<function name='CFNumberIsFloatType'>
<arg type='^{__CFNumber=}'/>
<retval type='B'/>
</function>
<function name='CFPlugInAddInstanceForFactory'>
<arg type='^{__CFUUID=}'/>
</function>
<function name='CFPlugInCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFBundle=}'/>
</function>
<function name='CFPlugInFindFactoriesForPlugInType'>
<arg type='^{__CFUUID=}'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFPlugInFindFactoriesForPlugInTypeInPlugIn'>
<arg type='^{__CFUUID=}'/>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFPlugInGetBundle'>
<arg type='^{__CFBundle=}'/>
<retval type='^{__CFBundle=}'/>
</function>
<function name='CFPlugInGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFPlugInInstanceCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFUUID=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='^v'/>
</function>
<function name='CFPlugInInstanceCreateWithInstanceDataSize'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFPlugInInstance=}'/>
<arg type='^{__CFString=}'/>
<arg type='^^v'/>
<retval type='B'/>
</arg>
<retval already_retained='true' type='^{__CFPlugInInstance=}'/>
</function>
<function name='CFPlugInInstanceGetFactoryName'>
<arg type='^{__CFPlugInInstance=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFPlugInInstanceGetInstanceData'>
<arg type='^{__CFPlugInInstance=}'/>
<retval type='^v'/>
</function>
<function name='CFPlugInInstanceGetInterfaceFunctionTable'>
<arg type='^{__CFPlugInInstance=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^^v'/>
<retval type='B'/>
</function>
<function name='CFPlugInInstanceGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFPlugInIsLoadOnDemand'>
<arg type='^{__CFBundle=}'/>
<retval type='B'/>
</function>
<function name='CFPlugInRegisterFactoryFunction'>
<arg type='^{__CFUUID=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='^v'/>
</arg>
<retval type='B'/>
</function>
<function name='CFPlugInRegisterFactoryFunctionByName'>
<arg type='^{__CFUUID=}'/>
<arg type='^{__CFBundle=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFPlugInRegisterPlugInType'>
<arg type='^{__CFUUID=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='B'/>
</function>
<function name='CFPlugInRemoveInstanceForFactory'>
<arg type='^{__CFUUID=}'/>
</function>
<function name='CFPlugInSetLoadOnDemand'>
<arg type='^{__CFBundle=}'/>
<arg type='B'/>
</function>
<function name='CFPlugInUnregisterFactory'>
<arg type='^{__CFUUID=}'/>
<retval type='B'/>
</function>
<function name='CFPlugInUnregisterPlugInType'>
<arg type='^{__CFUUID=}'/>
<arg type='^{__CFUUID=}'/>
<retval type='B'/>
</function>
<function name='CFPreferencesAddSuitePreferencesToApp'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFPreferencesAppSynchronize'>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFPreferencesAppValueIsForced'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFPreferencesCopyAppValue'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPreferencesCopyApplicationList'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFPreferencesCopyKeyList'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFPreferencesCopyMultiple'>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFPreferencesCopyValue'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPreferencesGetAppBooleanValue'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^B'/>
<retval type='B'/>
</function>
<function name='CFPreferencesGetAppIntegerValue'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^B'/>
<retval type64='q' type='l'/>
</function>
<function name='CFPreferencesRemoveSuitePreferencesFromApp'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFPreferencesSetAppValue'>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFPreferencesSetMultiple'>
<arg type='^{__CFDictionary=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFPreferencesSetValue'>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFPreferencesSynchronize'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFPropertyListCreateData'>
<arg type='^{__CFAllocator=}'/>
<arg type='@'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFPropertyListCreateDeepCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='@'/>
<arg type64='Q' type='L'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPropertyListCreateFromStream'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFReadStream=}'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<arg type_modifier='o' type='^^{__CFString}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPropertyListCreateFromXMLData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='o' type='^^{__CFString}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPropertyListCreateWithData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type64='Q' type='L'/>
<arg type64='^q' type='^i'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPropertyListCreateWithStream'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFReadStream=}'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<arg type64='^q' type='^i'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFPropertyListCreateXMLData'>
<arg type='^{__CFAllocator=}'/>
<arg type='@'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFPropertyListIsValid'>
<arg type='@'/>
<arg type64='q' type='l'/>
<retval type='B'/>
</function>
<function name='CFPropertyListWrite'>
<arg type='@'/>
<arg type='^{__CFWriteStream=}'/>
<arg type64='q' type='l'/>
<arg type64='Q' type='L'/>
<arg type='^^{__CFError}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFPropertyListWriteToStream'>
<arg type='@'/>
<arg type='^{__CFWriteStream=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type='^^{__CFString}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFRangeMake' inline='true'>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFReadStreamClose'>
<arg type='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCopyError'>
<arg type='^{__CFReadStream=}'/>
<retval already_retained='true' type='^{__CFError=}'/>
</function>
<function name='CFReadStreamCopyProperty'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFReadStreamCreateWithBytesNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCreateWithFile'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamGetBuffer'>
<arg type='^{__CFReadStream=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<retval c_array_length_in_arg='1' type='*'/>
</function>
<function name='CFReadStreamGetError'>
<arg type='^{__CFReadStream=}'/>
<retval type64='{_CFStreamError=qi}' type='{_CFStreamError=ii}'/>
</function>
<function name='CFReadStreamGetStatus'>
<arg type='^{__CFReadStream=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFReadStreamGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFReadStreamHasBytesAvailable'>
<arg type='^{__CFReadStream=}'/>
<retval type='B'/>
</function>
<function name='CFReadStreamOpen'>
<arg type='^{__CFReadStream=}'/>
<retval type='B'/>
</function>
<function name='CFReadStreamRead'>
<arg type='^{__CFReadStream=}'/>
<arg type_modifier='o' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval type64='q' type='l'/>
</function>
<function name='CFReadStreamScheduleWithRunLoop'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFReadStreamSetClient'>
<arg type='^{__CFReadStream=}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFReadStream=}'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFStreamClientContext=q^v^?^?^?}' type='^{_CFStreamClientContext=i^v^?^?^?}'/>
<retval type='B'/>
</function>
<function name='CFReadStreamSetProperty'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='CFReadStreamUnscheduleFromRunLoop'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRelease'>
<arg type='@'/>
</function>
<function name='CFRetain'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='CFRunLoopAddCommonMode'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopAddObserver'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopAddSource'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopSource=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopAddTimer'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopContainsObserver'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopContainsSource'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopSource=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopContainsTimer'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopCopyAllModes'>
<arg type='^{__CFRunLoop=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFRunLoopCopyCurrentMode'>
<arg type='^{__CFRunLoop=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFRunLoopGetCurrent'>
<retval type='^{__CFRunLoop=}'/>
</function>
<function name='CFRunLoopGetMain'>
<retval type='^{__CFRunLoop=}'/>
</function>
<function name='CFRunLoopGetNextTimerFireDate'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type='d'/>
</function>
<function name='CFRunLoopGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFRunLoopIsWaiting'>
<arg type='^{__CFRunLoop=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopObserverCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='Q' type='L'/>
<arg type='B'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFRunLoopObserverContext=q^v^?^?^?}' type='^{_CFRunLoopObserverContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFRunLoopObserver=}'/>
</function>
<function name='CFRunLoopObserverCreateWithHandler'>
<arg type='^{__CFAllocator=}'/>
<arg type64='Q' type='L'/>
<arg type='B'/>
<arg type64='q' type='l'/>
<arg function_pointer='true' type='@?'>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type64='Q' type='L'/>
<retval type='v'/>
</arg>
<retval already_retained='true' type='^{__CFRunLoopObserver=}'/>
</function>
<function name='CFRunLoopObserverDoesRepeat'>
<arg type='^{__CFRunLoopObserver=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopObserverGetActivities'>
<arg type='^{__CFRunLoopObserver=}'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFRunLoopObserverGetContext'>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type_modifier='o' type64='^{_CFRunLoopObserverContext=q^v^?^?^?}' type='^{_CFRunLoopObserverContext=i^v^?^?^?}'/>
</function>
<function name='CFRunLoopObserverGetOrder'>
<arg type='^{__CFRunLoopObserver=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFRunLoopObserverGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFRunLoopObserverInvalidate'>
<arg type='^{__CFRunLoopObserver=}'/>
</function>
<function name='CFRunLoopObserverIsValid'>
<arg type='^{__CFRunLoopObserver=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopPerformBlock'>
<arg type='^{__CFRunLoop=}'/>
<arg type='@'/>
<arg function_pointer='true' type='@?'>
<retval type='v'/>
</arg>
</function>
<function name='CFRunLoopRemoveObserver'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopObserver=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopRemoveSource'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopSource=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopRemoveTimer'>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFRunLoopRun'/>
<function name='CFRunLoopRunInMode'>
<arg type='^{__CFString=}'/>
<arg type='d'/>
<arg type='B'/>
<retval type64='i' type='l'/>
</function>
<function name='CFRunLoopSourceCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFRunLoopSourceContext=q^v^?^?^?^?^?^?^?^?}' type='^{_CFRunLoopSourceContext=i^v^?^?^?^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFRunLoopSourceGetContext'>
<arg type='^{__CFRunLoopSource=}'/>
<arg type_modifier='o' type64='^{_CFRunLoopSourceContext=q^v^?^?^?^?^?^?^?^?}' type='^{_CFRunLoopSourceContext=i^v^?^?^?^?^?^?^?^?}'/>
</function>
<function name='CFRunLoopSourceGetOrder'>
<arg type='^{__CFRunLoopSource=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFRunLoopSourceGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFRunLoopSourceInvalidate'>
<arg type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFRunLoopSourceIsValid'>
<arg type='^{__CFRunLoopSource=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopSourceSignal'>
<arg type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFRunLoopStop'>
<arg type='^{__CFRunLoop=}'/>
</function>
<function name='CFRunLoopTimerCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='d'/>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFRunLoopTimerContext=q^v^?^?^?}' type='^{_CFRunLoopTimerContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFRunLoopTimer=}'/>
</function>
<function name='CFRunLoopTimerCreateWithHandler'>
<arg type='^{__CFAllocator=}'/>
<arg type='d'/>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<arg function_pointer='true' type='@?'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type='v'/>
</arg>
<retval already_retained='true' type='^{__CFRunLoopTimer=}'/>
</function>
<function name='CFRunLoopTimerDoesRepeat'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopTimerGetContext'>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type_modifier='o' type64='^{_CFRunLoopTimerContext=q^v^?^?^?}' type='^{_CFRunLoopTimerContext=i^v^?^?^?}'/>
</function>
<function name='CFRunLoopTimerGetInterval'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type='d'/>
</function>
<function name='CFRunLoopTimerGetNextFireDate'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type='d'/>
</function>
<function name='CFRunLoopTimerGetOrder'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFRunLoopTimerGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFRunLoopTimerInvalidate'>
<arg type='^{__CFRunLoopTimer=}'/>
</function>
<function name='CFRunLoopTimerIsValid'>
<arg type='^{__CFRunLoopTimer=}'/>
<retval type='B'/>
</function>
<function name='CFRunLoopTimerSetNextFireDate'>
<arg type='^{__CFRunLoopTimer=}'/>
<arg type='d'/>
</function>
<function name='CFRunLoopWakeUp'>
<arg type='^{__CFRunLoop=}'/>
</function>
<function name='CFSetAddValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFSetApplyFunction'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFSetContainsValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='B'/>
</function>
<function name='CFSetCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^^v'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFSetCallBacks=q^?^?^?^?^?}' type='^{_CFSetCallBacks=i^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFSet=}'/>
</function>
<function name='CFSetCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFSet=}'/>
<retval already_retained='true' type='^{__CFSet=}'/>
</function>
<function name='CFSetCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFSetCallBacks=q^?^?^?^?^?}' type='^{_CFSetCallBacks=i^?^?^?^?^?}'/>
<retval already_retained='true' type='^{__CFSet=}'/>
</function>
<function name='CFSetCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFSet=}'/>
<retval already_retained='true' type='^{__CFSet=}'/>
</function>
<function name='CFSetGetCount'>
<arg type='^{__CFSet=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSetGetCountOfValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSetGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFSetGetValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
<retval type='^v'/>
</function>
<function name='CFSetGetValueIfPresent'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
<arg type_modifier='o' type='^^v'/>
<retval type='B'/>
</function>
<function name='CFSetGetValues'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^v'/>
</function>
<function name='CFSetRemoveAllValues'>
<arg type='^{__CFSet=}'/>
</function>
<function name='CFSetRemoveValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFSetReplaceValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFSetSetValue'>
<arg type='^{__CFSet=}'/>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFShow'>
<arg type='@'/>
</function>
<function name='CFShowStr'>
<arg type='^{__CFString=}'/>
</function>
<function name='CFSocketConnectToAddress'>
<arg type='^{__CFSocket=}'/>
<arg type='^{__CFData=}'/>
<arg type='d'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketCopyAddress'>
<arg type='^{__CFSocket=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFSocketCopyPeerAddress'>
<arg type='^{__CFSocket=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFSocketCopyRegisteredSocketSignature'>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type_modifier='o' type='^^{__CFData}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketCopyRegisteredValue'>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^^v'/>
<arg type_modifier='o' type='^^{__CFData}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='i' type='l'/>
<arg type64='i' type='l'/>
<arg type64='i' type='l'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFData=}'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFSocketContext=q^v^?^?^?}' type='^{_CFSocketContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFSocket=}'/>
</function>
<function name='CFSocketCreateConnectedToSocketSignature'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFData=}'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFSocketContext=q^v^?^?^?}' type='^{_CFSocketContext=i^v^?^?^?}'/>
<arg type='d'/>
<retval already_retained='true' type='^{__CFSocket=}'/>
</function>
<function name='CFSocketCreateRunLoopSource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFSocket=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFSocketCreateWithNative'>
<arg type='^{__CFAllocator=}'/>
<arg type='i'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFData=}'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFSocketContext=q^v^?^?^?}' type='^{_CFSocketContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFSocket=}'/>
</function>
<function name='CFSocketCreateWithSocketSignature'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFData=}'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFSocketContext=q^v^?^?^?}' type='^{_CFSocketContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFSocket=}'/>
</function>
<function name='CFSocketDisableCallBacks'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFSocketEnableCallBacks'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFSocketGetContext'>
<arg type='^{__CFSocket=}'/>
<arg type_modifier='o' type64='^{_CFSocketContext=q^v^?^?^?}' type='^{_CFSocketContext=i^v^?^?^?}'/>
</function>
<function name='CFSocketGetDefaultNameRegistryPortNumber'>
<retval type='S'/>
</function>
<function name='CFSocketGetNative'>
<arg type='^{__CFSocket=}'/>
<retval type='i'/>
</function>
<function name='CFSocketGetSocketFlags'>
<arg type='^{__CFSocket=}'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFSocketGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFSocketInvalidate'>
<arg type='^{__CFSocket=}'/>
</function>
<function name='CFSocketIsValid'>
<arg type='^{__CFSocket=}'/>
<retval type='B'/>
</function>
<function name='CFSocketRegisterSocketSignature'>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketRegisterValue'>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketSendData'>
<arg type='^{__CFSocket=}'/>
<arg type='^{__CFData=}'/>
<arg type='^{__CFData=}'/>
<arg type='d'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketSetAddress'>
<arg type='^{__CFSocket=}'/>
<arg type='^{__CFData=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFSocketSetDefaultNameRegistryPortNumber'>
<arg type='S'/>
</function>
<function name='CFSocketSetSocketFlags'>
<arg type='^{__CFSocket=}'/>
<arg type64='Q' type='L'/>
</function>
<function name='CFSocketUnregister'>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStreamCreateBoundPair'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='o' type='^^{__CFReadStream}'/>
<arg type_modifier='o' type='^^{__CFWriteStream}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFStreamCreatePairWithPeerSocketSignature'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^{_CFSocketSignature=iii^{__CFData}}'/>
<arg type_modifier='o' type='^^{__CFReadStream}'/>
<arg type_modifier='o' type='^^{__CFWriteStream}'/>
</function>
<function name='CFStreamCreatePairWithSocket'>
<arg type='^{__CFAllocator=}'/>
<arg type='i'/>
<arg type_modifier='o' type='^^{__CFReadStream}'/>
<arg type_modifier='o' type='^^{__CFWriteStream}'/>
</function>
<function name='CFStreamCreatePairWithSocketToHost'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg type_modifier='o' type='^^{__CFReadStream}'/>
<arg type_modifier='o' type='^^{__CFWriteStream}'/>
</function>
<function name='CFStringAppend'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringAppendCString'>
<arg type='^{__CFString=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
</function>
<function name='CFStringAppendCharacters'>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^S'/>
<arg type64='q' type='l'/>
</function>
<function name='CFStringAppendFormat' variadic='true'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFDictionary=}'/>
<arg printf_format='true' type='^{__CFString=}'/>
</function>
<function name='CFStringAppendFormatAndArguments'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFDictionary=}'/>
<arg printf_format='true' type='^{__CFString=}'/>
<arg type64='^{__va_list_tag=II^v^v}' type='*'/>
</function>
<function name='CFStringAppendPascalString'>
<arg type='^{__CFString=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
</function>
<function name='CFStringCapitalize'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFLocale=}'/>
</function>
<function name='CFStringCompare'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='Q' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringCompareWithOptions'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringCompareWithOptionsAndLocale'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringConvertEncodingToIANACharSetName'>
<arg type64='I' type='L'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFStringConvertEncodingToNSStringEncoding'>
<arg type64='I' type='L'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFStringConvertEncodingToWindowsCodepage'>
<arg type64='I' type='L'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringConvertIANACharSetNameToEncoding'>
<arg type='^{__CFString=}'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringConvertNSStringEncodingToEncoding'>
<arg type64='Q' type='L'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringConvertWindowsCodepageToEncoding'>
<arg type64='I' type='L'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringCreateArrayBySeparatingStrings'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFStringCreateArrayWithFindResults'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFStringCreateByCombiningStrings'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateExternalRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg type='C'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFStringCreateFromExternalRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type64='I' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateMutable'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateMutableCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateMutableWithExternalCharactersNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^S'/>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithBytesNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<arg type='B'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithCString'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithCStringNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithCharacters'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^S'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithCharactersNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^S'/>
<arg type64='q' type='l'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithFileSystemRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithFormat' variadic='true'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDictionary=}'/>
<arg printf_format='true' type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithFormatAndArguments'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDictionary=}'/>
<arg printf_format='true' type='^{__CFString=}'/>
<arg type64='^{__va_list_tag=II^v^v}' type='*'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithPascalString'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithPascalStringNoCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringCreateWithSubstring'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringDelete'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringFind'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='Q' type='L'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringFindAndReplace'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringFindCharacterFromSet'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFCharacterSet=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='B'/>
</function>
<function name='CFStringFindWithOptions'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='B'/>
</function>
<function name='CFStringFindWithOptionsAndLocale'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type='B'/>
</function>
<function name='CFStringFold'>
<arg type='^{__CFString=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
</function>
<function name='CFStringGetBytes'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='I' type='L'/>
<arg type='C'/>
<arg type='B'/>
<arg type_modifier='o' c_array_length_in_arg='6' type='*'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringGetCString'>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<retval type='B'/>
</function>
<function name='CFStringGetCStringPtr'>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<retval type='*'/>
</function>
<function name='CFStringGetCharacterAtIndex'>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<retval type='S'/>
</function>
<function name='CFStringGetCharacterFromInlineBuffer' inline='true'>
<arg type_modifier='n' type64='^{_CFStringInlineBuffer=[64S]^{__CFString}^S{_CFRange=qq}qq}' type='^{_CFStringInlineBuffer=[64S]^{__CFString}^S{_CFRange=ii}ii}'/>
<arg type64='q' type='l'/>
<retval type='S'/>
</function>
<function name='CFStringGetCharacters'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^S'/>
</function>
<function name='CFStringGetCharactersPtr'>
<arg type='^{__CFString=}'/>
<retval type='^S'/>
</function>
<function name='CFStringGetDoubleValue'>
<arg type='^{__CFString=}'/>
<retval type='d'/>
</function>
<function name='CFStringGetFastestEncoding'>
<arg type='^{__CFString=}'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringGetFileSystemRepresentation'>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval type='B'/>
</function>
<function name='CFStringGetHyphenationLocationBeforeIndex'>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
<arg type='^I'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringGetIntValue'>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFStringGetLength'>
<arg type='^{__CFString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringGetLineBounds'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<arg type_modifier='o' type64='^q' type='^i'/>
</function>
<function name='CFStringGetListOfAvailableEncodings'>
<retval type='^I'/>
</function>
<function name='CFStringGetLongCharacterForSurrogatePair' inline='true'>
<arg type='S'/>
<arg type='S'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringGetMaximumSizeForEncoding'>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringGetMaximumSizeOfFileSystemRepresentation'>
<arg type='^{__CFString=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringGetMostCompatibleMacStringEncoding'>
<arg type64='I' type='L'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringGetNameOfEncoding'>
<arg type64='I' type='L'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFStringGetParagraphBounds'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<arg type_modifier='o' type64='^q' type='^i'/>
<arg type_modifier='o' type64='^q' type='^i'/>
</function>
<function name='CFStringGetPascalString'>
<arg type='^{__CFString=}'/>
<arg type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<retval type='B'/>
</function>
<function name='CFStringGetPascalStringPtr'>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<retval type='*'/>
</function>
<function name='CFStringGetRangeOfComposedCharactersAtIndex'>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringGetSmallestEncoding'>
<arg type='^{__CFString=}'/>
<retval type64='I' type='L'/>
</function>
<function name='CFStringGetSurrogatePairForLongCharacter' inline='true'>
<arg type64='I' type='L'/>
<arg type='^S'/>
<retval type='B'/>
</function>
<function name='CFStringGetSystemEncoding'>
<retval type64='I' type='L'/>
</function>
<function name='CFStringGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFStringHasPrefix'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFStringHasSuffix'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval type='B'/>
</function>
<function name='CFStringInitInlineBuffer' inline='true'>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type64='^{_CFStringInlineBuffer=[64S]^{__CFString}^S{_CFRange=qq}qq}' type='^{_CFStringInlineBuffer=[64S]^{__CFString}^S{_CFRange=ii}ii}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringInsert'>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringIsEncodingAvailable'>
<arg type64='I' type='L'/>
<retval type='B'/>
</function>
<function name='CFStringIsHyphenationAvailableForLocale'>
<arg type='^{__CFLocale=}'/>
<retval type='B'/>
</function>
<function name='CFStringIsSurrogateHighCharacter' inline='true'>
<arg type='S'/>
<retval type='B'/>
</function>
<function name='CFStringIsSurrogateLowCharacter' inline='true'>
<arg type='S'/>
<retval type='B'/>
</function>
<function name='CFStringLowercase'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFLocale=}'/>
</function>
<function name='CFStringNormalize'>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFStringPad'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
</function>
<function name='CFStringReplace'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringReplaceAll'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringSetExternalCharactersNoCopy'>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='^S'/>
<arg type64='q' type='l'/>
<arg type64='q' type='l'/>
</function>
<function name='CFStringTokenizerAdvanceToNextToken'>
<arg type='^{__CFStringTokenizer=}'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFStringTokenizerCopyBestStringLanguage'>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFStringTokenizerCopyCurrentTokenAttribute'>
<arg type='^{__CFStringTokenizer=}'/>
<arg type64='Q' type='L'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFStringTokenizerCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFLocale=}'/>
<retval already_retained='true' type='^{__CFStringTokenizer=}'/>
</function>
<function name='CFStringTokenizerGetCurrentSubTokens'>
<arg type='^{__CFStringTokenizer=}'/>
<arg type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFArray=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFStringTokenizerGetCurrentTokenRange'>
<arg type='^{__CFStringTokenizer=}'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringTokenizerGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFStringTokenizerGoToTokenAtIndex'>
<arg type='^{__CFStringTokenizer=}'/>
<arg type64='q' type='l'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFStringTokenizerSetString'>
<arg type='^{__CFStringTokenizer=}'/>
<arg type='^{__CFString=}'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFStringTransform'>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<arg type='^{__CFString=}'/>
<arg type='B'/>
<retval type='B'/>
</function>
<function name='CFStringTrim'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringTrimWhitespace'>
<arg type='^{__CFString=}'/>
</function>
<function name='CFStringUppercase'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFLocale=}'/>
</function>
<function name='CFSwapInt16' inline='true'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='CFSwapInt16BigToHost' inline='true'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='CFSwapInt16HostToBig' inline='true'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='CFSwapInt16HostToLittle' inline='true'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='CFSwapInt16LittleToHost' inline='true'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='CFSwapInt32' inline='true'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CFSwapInt32BigToHost' inline='true'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CFSwapInt32HostToBig' inline='true'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CFSwapInt32HostToLittle' inline='true'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CFSwapInt32LittleToHost' inline='true'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CFSwapInt64' inline='true'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function name='CFSwapInt64BigToHost' inline='true'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function name='CFSwapInt64HostToBig' inline='true'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function name='CFSwapInt64HostToLittle' inline='true'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function name='CFSwapInt64LittleToHost' inline='true'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function name='CFTimeZoneCopyAbbreviation'>
<arg type='^{__CFTimeZone=}'/>
<arg type='d'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFTimeZoneCopyAbbreviationDictionary'>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFTimeZoneCopyDefault'>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFTimeZoneCopyKnownNames'>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFTimeZoneCopyLocalizedName'>
<arg type='^{__CFTimeZone=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFLocale=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFTimeZoneCopySystem'>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFTimeZoneCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFTimeZoneCreateWithName'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFTimeZoneCreateWithTimeIntervalFromGMT'>
<arg type='^{__CFAllocator=}'/>
<arg type='d'/>
<retval already_retained='true' type='^{__CFTimeZone=}'/>
</function>
<function name='CFTimeZoneGetData'>
<arg type='^{__CFTimeZone=}'/>
<retval type='^{__CFData=}'/>
</function>
<function name='CFTimeZoneGetDaylightSavingTimeOffset'>
<arg type='^{__CFTimeZone=}'/>
<arg type='d'/>
<retval type='d'/>
</function>
<function name='CFTimeZoneGetName'>
<arg type='^{__CFTimeZone=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFTimeZoneGetNextDaylightSavingTimeTransition'>
<arg type='^{__CFTimeZone=}'/>
<arg type='d'/>
<retval type='d'/>
</function>
<function name='CFTimeZoneGetSecondsFromGMT'>
<arg type='^{__CFTimeZone=}'/>
<arg type='d'/>
<retval type='d'/>
</function>
<function name='CFTimeZoneGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFTimeZoneIsDaylightSavingTime'>
<arg type='^{__CFTimeZone=}'/>
<arg type='d'/>
<retval type='B'/>
</function>
<function name='CFTimeZoneResetSystem'/>
<function name='CFTimeZoneSetAbbreviationDictionary'>
<arg type='^{__CFDictionary=}'/>
</function>
<function name='CFTimeZoneSetDefault'>
<arg type='^{__CFTimeZone=}'/>
</function>
<function name='CFTreeAppendChild'>
<arg type='^{__CFTree=}'/>
<arg type='^{__CFTree=}'/>
</function>
<function name='CFTreeApplyFunctionToChildren'>
<arg type='^{__CFTree=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFTreeCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type64='^{_CFTreeContext=q^v^?^?^?}' type='^{_CFTreeContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFTree=}'/>
</function>
<function name='CFTreeFindRoot'>
<arg type='^{__CFTree=}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFTreeGetChildAtIndex'>
<arg type='^{__CFTree=}'/>
<arg type64='q' type='l'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFTreeGetChildCount'>
<arg type='^{__CFTree=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFTreeGetChildren'>
<arg type='^{__CFTree=}'/>
<arg type_modifier='o' c_array_of_variable_length='true' type='^^{__CFTree}'/>
</function>
<function name='CFTreeGetContext'>
<arg type='^{__CFTree=}'/>
<arg type_modifier='o' type64='^{_CFTreeContext=q^v^?^?^?}' type='^{_CFTreeContext=i^v^?^?^?}'/>
</function>
<function name='CFTreeGetFirstChild'>
<arg type='^{__CFTree=}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFTreeGetNextSibling'>
<arg type='^{__CFTree=}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFTreeGetParent'>
<arg type='^{__CFTree=}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFTreeGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFTreeInsertSibling'>
<arg type='^{__CFTree=}'/>
<arg type='^{__CFTree=}'/>
</function>
<function name='CFTreePrependChild'>
<arg type='^{__CFTree=}'/>
<arg type='^{__CFTree=}'/>
</function>
<function name='CFTreeRemove'>
<arg type='^{__CFTree=}'/>
</function>
<function name='CFTreeRemoveAllChildren'>
<arg type='^{__CFTree=}'/>
</function>
<function name='CFTreeSetContext'>
<arg type='^{__CFTree=}'/>
<arg type_modifier='n' type64='^{_CFTreeContext=q^v^?^?^?}' type='^{_CFTreeContext=i^v^?^?^?}'/>
</function>
<function name='CFTreeSortChildren'>
<arg type='^{__CFTree=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='^v'/>
<retval type64='q' type='l'/>
</arg>
<arg type_modifier='n' type='^v'/>
</function>
<function name='CFURLCanBeDecomposed'>
<arg type='^{__CFURL=}'/>
<retval type='B'/>
</function>
<function name='CFURLClearResourcePropertyCache'>
<arg type='^{__CFURL=}'/>
</function>
<function name='CFURLClearResourcePropertyCacheForKey'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFURLCopyAbsoluteURL'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCopyFileSystemPath'>
<arg type='^{__CFURL=}'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyFragment'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyHostName'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyLastPathComponent'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyNetLocation'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyParameterString'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyPassword'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyPath'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyPathExtension'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyQueryString'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyResourcePropertiesForKeys'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFURLCopyResourcePropertyForKey'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^v'/>
<arg type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFURLCopyResourceSpecifier'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyScheme'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyStrictPath'>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' type='^B'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCopyUserName'>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCreateAbsoluteURLWithBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<arg type='^{__CFURL=}'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateBookmarkData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFURLCreateBookmarkDataFromAliasRecord'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFURLCreateBookmarkDataFromFile'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFURLCreateByResolvingBookmarkData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^B'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateCopyAppendingPathComponent'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateCopyAppendingPathExtension'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateCopyDeletingLastPathComponent'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateCopyDeletingPathExtension'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='I' type='L'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFURLCreateDataAndPropertiesFromResource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' type='^^{__CFData}'/>
<arg type_modifier='o' type='^^{__CFDictionary}'/>
<arg type='^{__CFArray=}'/>
<arg type_modifier='o' type='^i'/>
<retval type='B'/>
</function>
<function name='CFURLCreateFilePathURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateFileReferenceURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateFromFSRef'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' type='^{FSRef=[80C]}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateFromFileSystemRepresentation'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateFromFileSystemRepresentationRelativeToBase'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type='B'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreatePropertyFromResource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type='^i'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFURLCreateResourcePropertiesForKeysFromBookmarkData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFURLCreateResourcePropertyForKeyFromBookmarkData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFURLCreateStringByAddingPercentEscapes'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCreateStringByReplacingPercentEscapes'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCreateStringByReplacingPercentEscapesUsingEncoding'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFURLCreateWithBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<arg type64='I' type='L'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateWithFileSystemPath'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateWithFileSystemPathRelativeToBase'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<arg type='B'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLCreateWithString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFURLDestroyResource'>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' type='^i'/>
<retval type='B'/>
</function>
<function name='CFURLEnumeratorCreateForDirectoryURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFURLEnumerator=}'/>
</function>
<function name='CFURLEnumeratorCreateForMountedVolumes'>
<arg type='^{__CFAllocator=}'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFArray=}'/>
<retval already_retained='true' type='^{__CFURLEnumerator=}'/>
</function>
<function name='CFURLEnumeratorGetDescendentLevel'>
<arg type='^{__CFURLEnumerator=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFURLEnumeratorGetNextURL'>
<arg type='^{__CFURLEnumerator=}'/>
<arg type='^^{__CFURL}'/>
<arg type='^^{__CFError}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFURLEnumeratorGetSourceDidChange'>
<arg type='^{__CFURLEnumerator=}'/>
<retval type='B'/>
</function>
<function name='CFURLEnumeratorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFURLEnumeratorSkipDescendents'>
<arg type='^{__CFURLEnumerator=}'/>
</function>
<function name='CFURLGetBaseURL'>
<arg type='^{__CFURL=}'/>
<retval type='^{__CFURL=}'/>
</function>
<function name='CFURLGetByteRangeForComponent'>
<arg type='^{__CFURL=}'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type64='^{_CFRange=qq}' type='^{_CFRange=ii}'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}'/>
</function>
<function name='CFURLGetBytes'>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval type64='q' type='l'/>
</function>
<function name='CFURLGetFSRef'>
<arg type='^{__CFURL=}'/>
<arg type_modifier='o' type='^{FSRef=[80C]}'/>
<retval type='B'/>
</function>
<function name='CFURLGetFileSystemRepresentation'>
<arg type='^{__CFURL=}'/>
<arg type='B'/>
<arg type_modifier='o' c_array_length_in_arg='3' type='*'/>
<arg type64='q' type='l'/>
<retval type='B'/>
</function>
<function name='CFURLGetPortNumber'>
<arg type='^{__CFURL=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFURLGetString'>
<arg type='^{__CFURL=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFURLGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFURLHasDirectoryPath'>
<arg type='^{__CFURL=}'/>
<retval type='B'/>
</function>
<function name='CFURLResourceIsReachable'>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFURLSetResourcePropertiesForKeys'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFURLSetResourcePropertyForKey'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<arg type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFURLSetTemporaryResourcePropertyForKey'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
</function>
<function name='CFURLStartAccessingSecurityScopedResource'>
<arg type='^{__CFURL=}'/>
<retval type='B'/>
</function>
<function name='CFURLStopAccessingSecurityScopedResource'>
<arg type='^{__CFURL=}'/>
</function>
<function name='CFURLWriteBookmarkDataToFile'>
<arg type='^{__CFData=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type='^^{__CFError}'/>
<retval type='B'/>
</function>
<function name='CFURLWriteDataAndPropertiesToResource'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFData=}'/>
<arg type='^{__CFDictionary=}'/>
<arg type_modifier='o' type='^i'/>
<retval type='B'/>
</function>
<function name='CFUUIDCreate'>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFUUID=}'/>
</function>
<function name='CFUUIDCreateFromString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFUUID=}'/>
</function>
<function name='CFUUIDCreateFromUUIDBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type='{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval already_retained='true' type='^{__CFUUID=}'/>
</function>
<function name='CFUUIDCreateString'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFUUID=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFUUIDCreateWithBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<retval already_retained='true' type='^{__CFUUID=}'/>
</function>
<function name='CFUUIDGetConstantUUIDWithBytes'>
<arg type='^{__CFAllocator=}'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<arg type='C'/>
<retval type='^{__CFUUID=}'/>
</function>
<function name='CFUUIDGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFUUIDGetUUIDBytes'>
<arg type='^{__CFUUID=}'/>
<retval type='{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
</function>
<function name='CFUserNotificationCancel'>
<arg type='^{__CFUserNotification=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFUserNotificationCheckBoxChecked' inline='true'>
<arg type64='q' type='l'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFUserNotificationCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type_modifier='o' type='^i'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFUserNotification=}'/>
</function>
<function name='CFUserNotificationCreateRunLoopSource'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFUserNotification=}'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFUserNotification=}'/>
<arg type64='Q' type='L'/>
<retval type='v'/>
</arg>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFUserNotificationDisplayAlert'>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='o' type64='^Q' type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='CFUserNotificationDisplayNotice'>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFUserNotificationGetResponseDictionary'>
<arg type='^{__CFUserNotification=}'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CFUserNotificationGetResponseValue'>
<arg type='^{__CFUserNotification=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFUserNotificationGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFUserNotificationPopUpSelection' inline='true'>
<arg type64='q' type='l'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFUserNotificationReceiveResponse'>
<arg type='^{__CFUserNotification=}'/>
<arg type='d'/>
<arg type_modifier='o' type64='^Q' type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='CFUserNotificationSecureTextField' inline='true'>
<arg type64='q' type='l'/>
<retval type64='Q' type='L'/>
</function>
<function name='CFUserNotificationUpdate'>
<arg type='^{__CFUserNotification=}'/>
<arg type='d'/>
<arg type64='Q' type='L'/>
<arg type='^{__CFDictionary=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFWriteStreamCanAcceptBytes'>
<arg type='^{__CFWriteStream=}'/>
<retval type='B'/>
</function>
<function name='CFWriteStreamClose'>
<arg type='^{__CFWriteStream=}'/>
</function>
<function name='CFWriteStreamCopyError'>
<arg type='^{__CFWriteStream=}'/>
<retval already_retained='true' type='^{__CFError=}'/>
</function>
<function name='CFWriteStreamCopyProperty'>
<arg type='^{__CFWriteStream=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='@'/>
</function>
<function name='CFWriteStreamCreateWithAllocatedBuffers'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFAllocator=}'/>
<retval already_retained='true' type='^{__CFWriteStream=}'/>
</function>
<function name='CFWriteStreamCreateWithBuffer'>
<arg type='^{__CFAllocator=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFWriteStream=}'/>
</function>
<function name='CFWriteStreamCreateWithFile'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFWriteStream=}'/>
</function>
<function name='CFWriteStreamGetError'>
<arg type='^{__CFWriteStream=}'/>
<retval type64='{_CFStreamError=qi}' type='{_CFStreamError=ii}'/>
</function>
<function name='CFWriteStreamGetStatus'>
<arg type='^{__CFWriteStream=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFWriteStreamGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFWriteStreamOpen'>
<arg type='^{__CFWriteStream=}'/>
<retval type='B'/>
</function>
<function name='CFWriteStreamScheduleWithRunLoop'>
<arg type='^{__CFWriteStream=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFWriteStreamSetClient'>
<arg type='^{__CFWriteStream=}'/>
<arg type64='Q' type='L'/>
<arg type_modifier='n' function_pointer='true' type='^?'>
<arg type='^{__CFWriteStream=}'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type_modifier='n' type64='^{_CFStreamClientContext=q^v^?^?^?}' type='^{_CFStreamClientContext=i^v^?^?^?}'/>
<retval type='B'/>
</function>
<function name='CFWriteStreamSetProperty'>
<arg type='^{__CFWriteStream=}'/>
<arg type='^{__CFString=}'/>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='CFWriteStreamUnscheduleFromRunLoop'>
<arg type='^{__CFWriteStream=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFWriteStreamWrite'>
<arg type='^{__CFWriteStream=}'/>
<arg type_modifier='n' c_array_length_in_arg='2' type='*'/>
<arg type64='q' type='l'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLCreateStringByEscapingEntities'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFXMLCreateStringByUnescapingEntities'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFXMLNodeCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
<arg type_modifier='n' type='^v'/>
<arg type64='q' type='l'/>
<retval already_retained='true' type='^{__CFXMLNode=}'/>
</function>
<function name='CFXMLNodeCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFXMLNode=}'/>
<retval already_retained='true' type='^{__CFXMLNode=}'/>
</function>
<function name='CFXMLNodeGetInfoPtr'>
<arg type='^{__CFXMLNode=}'/>
<retval type='^v'/>
</function>
<function name='CFXMLNodeGetString'>
<arg type='^{__CFXMLNode=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFXMLNodeGetTypeCode'>
<arg type='^{__CFXMLNode=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLNodeGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFXMLNodeGetVersion'>
<arg type='^{__CFXMLNode=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLParserAbort'>
<arg type='^{__CFXMLParser=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFXMLParserCopyErrorDescription'>
<arg type='^{__CFXMLParser=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFXMLParserCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFXMLParserCallBacks=q^?^?^?^?^?}' type='^{_CFXMLParserCallBacks=i^?^?^?^?^?}'/>
<arg type_modifier='n' type64='^{_CFXMLParserContext=q^v^?^?^?}' type='^{_CFXMLParserContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFXMLParser=}'/>
</function>
<function name='CFXMLParserCreateWithDataFromURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<arg type_modifier='n' type64='^{_CFXMLParserCallBacks=q^?^?^?^?^?}' type='^{_CFXMLParserCallBacks=i^?^?^?^?^?}'/>
<arg type_modifier='n' type64='^{_CFXMLParserContext=q^v^?^?^?}' type='^{_CFXMLParserContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFXMLParser=}'/>
</function>
<function name='CFXMLParserGetCallBacks'>
<arg type='^{__CFXMLParser=}'/>
<arg type_modifier='o' type64='^{_CFXMLParserCallBacks=q^?^?^?^?^?}' type='^{_CFXMLParserCallBacks=i^?^?^?^?^?}'/>
</function>
<function name='CFXMLParserGetContext'>
<arg type='^{__CFXMLParser=}'/>
<arg type_modifier='o' type64='^{_CFXMLParserContext=q^v^?^?^?}' type='^{_CFXMLParserContext=i^v^?^?^?}'/>
</function>
<function name='CFXMLParserGetDocument'>
<arg type='^{__CFXMLParser=}'/>
<retval type='^v'/>
</function>
<function name='CFXMLParserGetLineNumber'>
<arg type='^{__CFXMLParser=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLParserGetLocation'>
<arg type='^{__CFXMLParser=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLParserGetSourceURL'>
<arg type='^{__CFXMLParser=}'/>
<retval type='^{__CFURL=}'/>
</function>
<function name='CFXMLParserGetStatusCode'>
<arg type='^{__CFXMLParser=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFXMLParserGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFXMLParserParse'>
<arg type='^{__CFXMLParser=}'/>
<retval type='B'/>
</function>
<function name='CFXMLTreeCreateFromData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFXMLTreeCreateFromDataWithError'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<arg type_modifier='o' type='^^{__CFDictionary}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFXMLTreeCreateWithDataFromURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<arg type64='Q' type='L'/>
<arg type64='q' type='l'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFXMLTreeCreateWithNode'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFXMLNode=}'/>
<retval type='^{__CFTree=}'/>
</function>
<function name='CFXMLTreeCreateXMLData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFTree=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFXMLTreeGetNode'>
<arg type='^{__CFTree=}'/>
<retval type='^{__CFXMLNode=}'/>
</function>
</signatures>
