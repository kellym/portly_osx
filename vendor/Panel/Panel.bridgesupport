<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='ARROW_HEIGHT' value='8'/>
<enum name='ARROW_WIDTH' value='16'/>
<enum name='STATUS_ITEM_VIEW_WIDTH' value='24.0'/>
<class name='AddPortView'>
<method selector='initWithFrame:delegate:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSResponder*' index='1' name='delegateObject' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='BackgroundView'>
<method selector='arrowX'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel'>
<retval declared_type='NSWindow*' type='@'/>
</method>
<method selector='setArrowX:'>
<arg declared_type='NSInteger' index='0' name='arrowX' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAnimating:'>
<arg declared_type='BOOL' index='0' name='isAnimating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanel:'>
<arg declared_type='NSWindow*' index='0' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Button'>
<method selector='delegate'>
<retval declared_type='NSResponder*' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='NSResponder*' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='ColorGradientView'>
<method selector='angle'>
<retval declared_type='int' type='i'/>
</method>
<method selector='endingColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='location'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAngle:'>
<arg declared_type='int' index='0' name='angle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndingColor:'>
<arg declared_type='NSColor*' index='0' name='endingColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:'>
<arg declared_type='float' index='0' name='location' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartingColor:'>
<arg declared_type='NSColor*' index='0' name='startingColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startingColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='statusItemViewForPanelController:'>
<arg declared_type='PanelController*' index='0' name='controller' type='@'/>
<retval declared_type='StatusItemView*' type='@'/>
</method>
</class>
<class name='PanelController'>
<method selector='addPortView'>
<retval declared_type='AddPortView*' type='@'/>
</method>
<method selector='addRowWithDelegate:'>
<arg declared_type='NSResponder*' index='0' name='delegate' type='@'/>
<retval declared_type='Row*' type='@'/>
</method>
<method selector='addTunnel:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='backgroundView'>
<retval declared_type='BackgroundView*' type='@'/>
</method>
<method selector='closePanel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defineStatusMenu:'>
<arg declared_type='NSMenu*' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasActivePanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='header'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hideAddButton'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideBlankSlate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='linkClicked:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openPanel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRowView:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rows'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setAddPortView:'>
<arg declared_type='AddPortView*' index='0' name='addPortView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='BackgroundView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasActivePanel:'>
<arg declared_type='BOOL' index='0' name='hasActivePanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeader:'>
<arg declared_type='NSString*' index='0' name='header' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAnimating:'>
<arg declared_type='BOOL' index='0' name='isAnimating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRows:'>
<arg declared_type='NSMutableArray*' index='0' name='rows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSettingsView:'>
<arg declared_type='SettingsView*' index='0' name='settingsView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusMenu:'>
<arg declared_type='NSMenu*' index='0' name='statusMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settingsView'>
<retval declared_type='SettingsView*' type='@'/>
</method>
<method selector='showAddButton'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showBlankSlate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showSettings:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusMenu'>
<retval declared_type='NSMenu*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='triggerActivePanel:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Row'>
<method selector='activityButton'>
<retval declared_type='Button*' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='buttonClicked:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentState'>
<retval declared_type='RowStatus*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='NSResponder*' type='@'/>
</method>
<method selector='disabledHoverColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='fillGradientView'>
<retval declared_type='ColorGradientView*' type='@'/>
</method>
<method selector='gradientView'>
<retval declared_type='ColorGradientView*' type='@'/>
</method>
<method selector='hoverColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='inactiveColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='initWithFrame:delegate:parent:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSResponder*' index='1' name='delegateObject' type='@'/>
<arg declared_type='NSObject*' index='2' name='parentObject' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='parent'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='setActivityButton:'>
<arg declared_type='Button*' index='0' name='activityButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentState:'>
<arg declared_type='RowStatus*' index='0' name='currentState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='NSResponder*' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisabledHoverColor:'>
<arg declared_type='NSColor*' index='0' name='disabledHoverColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillGradientView:'>
<arg declared_type='ColorGradientView*' index='0' name='fillGradientView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientView:'>
<arg declared_type='ColorGradientView*' index='0' name='gradientView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHoverColor:'>
<arg declared_type='NSColor*' index='0' name='hoverColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInactiveColor:'>
<arg declared_type='NSColor*' index='0' name='inactiveColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='NSColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg declared_type='NSObject*' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showActivityButtonIfMouseEntered'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RowStatus'>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='refresh:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInactive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsActive:'>
<arg declared_type='BOOL' index='0' name='isActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsOnline:'>
<arg declared_type='BOOL' index='0' name='isOnline' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffline'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnline'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleAutomatically'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleField:'>
<arg declared_type='NSTextField*' index='0' name='titleField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleField'>
<retval declared_type='NSTextField*' type='@'/>
</method>
<method selector='toggleActiveState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleState'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SettingsView'>
<method selector='initWithFrame:delegate:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSResponder*' index='1' name='delegateObject' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='StatusItemView'>
<method selector='action'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='alternateImage'>
<retval declared_type='NSImage*' type='@'/>
</method>
<method selector='globalRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='image'>
<retval declared_type='NSImage*' type='@'/>
</method>
<method selector='initWithStatusItem:'>
<arg declared_type='NSStatusItem*' index='0' name='statusItem' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type='NSImage*' index='0' name='alternateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='isHighlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusItem:'>
<arg declared_type='NSStatusItem*' index='0' name='statusItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusItem'>
<retval declared_type='NSStatusItem*' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UrlView'>
<method selector='color'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='hoverColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='initWithFrame:title:url:delegate:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString*' index='1' name='textValue' type='@'/>
<arg declared_type='NSString*' index='2' name='urlValue' type='@'/>
<arg declared_type='NSResponder*' index='3' name='delegateObject' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHoverColor:'>
<arg declared_type='NSColor*' index='0' name='hoverColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='PanelControllerDelegate'>
<method selector='statusItemViewForPanelController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='PanelController*' index='0' name='controller' type='@'/>
<retval declared_type='StatusItemView*' type='@'/>
</method>
</informal_protocol>
</signatures>
